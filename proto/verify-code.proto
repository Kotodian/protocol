syntax = "proto3";
package verifycode;
option optimize_for = LITE_RUNTIME;
option go_package = "github.com/Kotodian/protocol/golang/verifycode";

// VerifyCode 对外接口定义
// requestid 和 callerid 通过ctx传过来
// 第三方验证码服务
service VerifyCodeService {
    // 发送验证码
    rpc Send(CodeReq) returns (CodeResp);
    // 检查验证码
    rpc Verify(VerifyReq) returns (VerifyResp);
}

// 发送类型
enum SendType {
    SendSms =0; //短信
    SendMail =1;//邮件
}

// 业务类型
enum BizType {
    Login=0;//登录验证
    Draw=1;//提现验证
    BindCard=2;//绑定银行卡
    UnBindCard=3;//解绑银行卡
    ApplyOwner=4;//桩主申请
}   

message CodeReq {
    string AppID=1; //商户ID
    BizType BizType=2; //业务类型
    SendType Type=3;//发送类型
    string UniqueID=4;//唯一标识
    Mail Mail=5;//邮件内容
    Sms Sms=6;//短信号码
}

message Mail {
    string To=1;//目标邮件地址
    string FromName=2;//邮件显示名称
}

message Sms {
    string Phone=1;//手机号码
    string NationCode=2;//国家码
}

message CodeResp{

}

message VerifyReq {
    string AppID=1; //商户ID
    int32 BizType=2; //业务类型
    SendType Type=3;//发送类型
    string UniqueID=4;//唯一ID
    string Code=5;//验证码
}

message VerifyResp{
    int32 Code=1; //状态码
    string Msg=2; //错误消息
}