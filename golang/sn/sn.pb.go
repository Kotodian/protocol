// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sn.proto

package sn

import (
	context "context"
	fmt "fmt"
	common "github.com/Kotodian/protocol/golang/common"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SNState int32

const (
	SNState_SNS_UNKNOWN         SNState = 0
	SNState_SNS_WAIT_ACTIVATION SNState = 1
	SNState_SNS_ACTIVATED       SNState = 2
	SNState_SNS_EXPIRED         SNState = 3
)

var SNState_name = map[int32]string{
	0: "SNS_UNKNOWN",
	1: "SNS_WAIT_ACTIVATION",
	2: "SNS_ACTIVATED",
	3: "SNS_EXPIRED",
}

var SNState_value = map[string]int32{
	"SNS_UNKNOWN":         0,
	"SNS_WAIT_ACTIVATION": 1,
	"SNS_ACTIVATED":       2,
	"SNS_EXPIRED":         3,
}

func (x SNState) String() string {
	return proto.EnumName(SNState_name, int32(x))
}

func (SNState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d9f65f69f36f2d7, []int{0}
}

type ApplyMode int32

const (
	ApplyMode_AM_UNKNOWN ApplyMode = 0
	ApplyMode_AM_AUTOGEN ApplyMode = 1
	ApplyMode_AM_UD      ApplyMode = 2
)

var ApplyMode_name = map[int32]string{
	0: "AM_UNKNOWN",
	1: "AM_AUTOGEN",
	2: "AM_UD",
}

var ApplyMode_value = map[string]int32{
	"AM_UNKNOWN": 0,
	"AM_AUTOGEN": 1,
	"AM_UD":      2,
}

func (x ApplyMode) String() string {
	return proto.EnumName(ApplyMode_name, int32(x))
}

func (ApplyMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0d9f65f69f36f2d7, []int{1}
}

type SyncAndActivateReq struct {
	Sn                   string   `protobuf:"bytes,1,opt,name=sn,proto3" json:"sn,omitempty"`
	OperatorId           uint64   `protobuf:"varint,2,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty,string"`
	EvseId               uint64   `protobuf:"varint,3,opt,name=evse_id,json=evseId,proto3" json:"evse_id,omitempty,string"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncAndActivateReq) Reset()         { *m = SyncAndActivateReq{} }
func (m *SyncAndActivateReq) String() string { return proto.CompactTextString(m) }
func (*SyncAndActivateReq) ProtoMessage()    {}
func (*SyncAndActivateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d9f65f69f36f2d7, []int{0}
}

func (m *SyncAndActivateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncAndActivateReq.Unmarshal(m, b)
}
func (m *SyncAndActivateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncAndActivateReq.Marshal(b, m, deterministic)
}
func (m *SyncAndActivateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncAndActivateReq.Merge(m, src)
}
func (m *SyncAndActivateReq) XXX_Size() int {
	return xxx_messageInfo_SyncAndActivateReq.Size(m)
}
func (m *SyncAndActivateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncAndActivateReq.DiscardUnknown(m)
}

var xxx_messageInfo_SyncAndActivateReq proto.InternalMessageInfo

func (m *SyncAndActivateReq) GetSn() string {
	if m != nil {
		return m.Sn
	}
	return ""
}

func (m *SyncAndActivateReq) GetOperatorId() uint64 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *SyncAndActivateReq) GetEvseId() uint64 {
	if m != nil {
		return m.EvseId
	}
	return 0
}

type ApplyReq struct {
	ApplyId              uint64    `protobuf:"varint,1,opt,name=apply_id,json=applyId,proto3" json:"apply_id,omitempty,string"`
	OperatorId           uint64    `protobuf:"varint,2,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty,string"`
	ApplyMode            ApplyMode `protobuf:"varint,3,opt,name=apply_mode,json=applyMode,proto3,enum=sn.ApplyMode" json:"apply_mode,omitempty"`
	ApplyNumber          int32     `protobuf:"varint,4,opt,name=apply_number,json=applyNumber,proto3" json:"apply_number,omitempty"`
	SnLength             int32     `protobuf:"varint,5,opt,name=sn_length,json=snLength,proto3" json:"sn_length,omitempty"`
	UdSns                []string  `protobuf:"bytes,6,rep,name=ud_sns,json=udSns,proto3" json:"ud_sns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ApplyReq) Reset()         { *m = ApplyReq{} }
func (m *ApplyReq) String() string { return proto.CompactTextString(m) }
func (*ApplyReq) ProtoMessage()    {}
func (*ApplyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d9f65f69f36f2d7, []int{1}
}

func (m *ApplyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyReq.Unmarshal(m, b)
}
func (m *ApplyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyReq.Marshal(b, m, deterministic)
}
func (m *ApplyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyReq.Merge(m, src)
}
func (m *ApplyReq) XXX_Size() int {
	return xxx_messageInfo_ApplyReq.Size(m)
}
func (m *ApplyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyReq.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyReq proto.InternalMessageInfo

func (m *ApplyReq) GetApplyId() uint64 {
	if m != nil {
		return m.ApplyId
	}
	return 0
}

func (m *ApplyReq) GetOperatorId() uint64 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *ApplyReq) GetApplyMode() ApplyMode {
	if m != nil {
		return m.ApplyMode
	}
	return ApplyMode_AM_UNKNOWN
}

func (m *ApplyReq) GetApplyNumber() int32 {
	if m != nil {
		return m.ApplyNumber
	}
	return 0
}

func (m *ApplyReq) GetSnLength() int32 {
	if m != nil {
		return m.SnLength
	}
	return 0
}

func (m *ApplyReq) GetUdSns() []string {
	if m != nil {
		return m.UdSns
	}
	return nil
}

type ApplyResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyResp) Reset()         { *m = ApplyResp{} }
func (m *ApplyResp) String() string { return proto.CompactTextString(m) }
func (*ApplyResp) ProtoMessage()    {}
func (*ApplyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d9f65f69f36f2d7, []int{2}
}

func (m *ApplyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyResp.Unmarshal(m, b)
}
func (m *ApplyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyResp.Marshal(b, m, deterministic)
}
func (m *ApplyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyResp.Merge(m, src)
}
func (m *ApplyResp) XXX_Size() int {
	return xxx_messageInfo_ApplyResp.Size(m)
}
func (m *ApplyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyResp.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyResp proto.InternalMessageInfo

type ListByApplyIDReq struct {
	Pagereq              *common.PageReq        `protobuf:"bytes,1,opt,name=pagereq,proto3" json:"pagereq,omitempty"`
	SearchFilters        []*common.SearchFilter `protobuf:"bytes,2,rep,name=search_filters,json=searchFilters,proto3" json:"search_filters,omitempty"`
	ApplyId              uint64                 `protobuf:"varint,3,opt,name=apply_id,json=applyId,proto3" json:"apply_id,omitempty,string"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListByApplyIDReq) Reset()         { *m = ListByApplyIDReq{} }
func (m *ListByApplyIDReq) String() string { return proto.CompactTextString(m) }
func (*ListByApplyIDReq) ProtoMessage()    {}
func (*ListByApplyIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d9f65f69f36f2d7, []int{3}
}

func (m *ListByApplyIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListByApplyIDReq.Unmarshal(m, b)
}
func (m *ListByApplyIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListByApplyIDReq.Marshal(b, m, deterministic)
}
func (m *ListByApplyIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListByApplyIDReq.Merge(m, src)
}
func (m *ListByApplyIDReq) XXX_Size() int {
	return xxx_messageInfo_ListByApplyIDReq.Size(m)
}
func (m *ListByApplyIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListByApplyIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListByApplyIDReq proto.InternalMessageInfo

func (m *ListByApplyIDReq) GetPagereq() *common.PageReq {
	if m != nil {
		return m.Pagereq
	}
	return nil
}

func (m *ListByApplyIDReq) GetSearchFilters() []*common.SearchFilter {
	if m != nil {
		return m.SearchFilters
	}
	return nil
}

func (m *ListByApplyIDReq) GetApplyId() uint64 {
	if m != nil {
		return m.ApplyId
	}
	return 0
}

type ListByOperatorIDReq struct {
	Pagereq              *common.PageReq        `protobuf:"bytes,1,opt,name=pagereq,proto3" json:"pagereq,omitempty"`
	SearchFilters        []*common.SearchFilter `protobuf:"bytes,2,rep,name=search_filters,json=searchFilters,proto3" json:"search_filters,omitempty"`
	OperatorId           uint64                 `protobuf:"varint,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty,string"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListByOperatorIDReq) Reset()         { *m = ListByOperatorIDReq{} }
func (m *ListByOperatorIDReq) String() string { return proto.CompactTextString(m) }
func (*ListByOperatorIDReq) ProtoMessage()    {}
func (*ListByOperatorIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d9f65f69f36f2d7, []int{4}
}

func (m *ListByOperatorIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListByOperatorIDReq.Unmarshal(m, b)
}
func (m *ListByOperatorIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListByOperatorIDReq.Marshal(b, m, deterministic)
}
func (m *ListByOperatorIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListByOperatorIDReq.Merge(m, src)
}
func (m *ListByOperatorIDReq) XXX_Size() int {
	return xxx_messageInfo_ListByOperatorIDReq.Size(m)
}
func (m *ListByOperatorIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListByOperatorIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListByOperatorIDReq proto.InternalMessageInfo

func (m *ListByOperatorIDReq) GetPagereq() *common.PageReq {
	if m != nil {
		return m.Pagereq
	}
	return nil
}

func (m *ListByOperatorIDReq) GetSearchFilters() []*common.SearchFilter {
	if m != nil {
		return m.SearchFilters
	}
	return nil
}

func (m *ListByOperatorIDReq) GetOperatorId() uint64 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

type SNInfoList struct {
	Pageresp             *common.PageResp `protobuf:"bytes,1,opt,name=pageresp,proto3" json:"pageresp,omitempty"`
	SnInfos              []*SNInfo        `protobuf:"bytes,2,rep,name=sn_infos,json=snInfos,proto3" json:"sn_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SNInfoList) Reset()         { *m = SNInfoList{} }
func (m *SNInfoList) String() string { return proto.CompactTextString(m) }
func (*SNInfoList) ProtoMessage()    {}
func (*SNInfoList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d9f65f69f36f2d7, []int{5}
}

func (m *SNInfoList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SNInfoList.Unmarshal(m, b)
}
func (m *SNInfoList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SNInfoList.Marshal(b, m, deterministic)
}
func (m *SNInfoList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SNInfoList.Merge(m, src)
}
func (m *SNInfoList) XXX_Size() int {
	return xxx_messageInfo_SNInfoList.Size(m)
}
func (m *SNInfoList) XXX_DiscardUnknown() {
	xxx_messageInfo_SNInfoList.DiscardUnknown(m)
}

var xxx_messageInfo_SNInfoList proto.InternalMessageInfo

func (m *SNInfoList) GetPageresp() *common.PageResp {
	if m != nil {
		return m.Pageresp
	}
	return nil
}

func (m *SNInfoList) GetSnInfos() []*SNInfo {
	if m != nil {
		return m.SnInfos
	}
	return nil
}

type InfoReq struct {
	Sn                   string   `protobuf:"bytes,1,opt,name=sn,proto3" json:"sn,omitempty"`
	OperatorId           uint64   `protobuf:"varint,2,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty,string"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoReq) Reset()         { *m = InfoReq{} }
func (m *InfoReq) String() string { return proto.CompactTextString(m) }
func (*InfoReq) ProtoMessage()    {}
func (*InfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d9f65f69f36f2d7, []int{6}
}

func (m *InfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoReq.Unmarshal(m, b)
}
func (m *InfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoReq.Marshal(b, m, deterministic)
}
func (m *InfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoReq.Merge(m, src)
}
func (m *InfoReq) XXX_Size() int {
	return xxx_messageInfo_InfoReq.Size(m)
}
func (m *InfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoReq proto.InternalMessageInfo

func (m *InfoReq) GetSn() string {
	if m != nil {
		return m.Sn
	}
	return ""
}

func (m *InfoReq) GetOperatorId() uint64 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

type ActivateReq struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty,string"`
	EvseId               uint64   `protobuf:"varint,3,opt,name=evse_id,json=evseId,proto3" json:"evse_id,omitempty,string"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateReq) Reset()         { *m = ActivateReq{} }
func (m *ActivateReq) String() string { return proto.CompactTextString(m) }
func (*ActivateReq) ProtoMessage()    {}
func (*ActivateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d9f65f69f36f2d7, []int{7}
}

func (m *ActivateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateReq.Unmarshal(m, b)
}
func (m *ActivateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateReq.Marshal(b, m, deterministic)
}
func (m *ActivateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateReq.Merge(m, src)
}
func (m *ActivateReq) XXX_Size() int {
	return xxx_messageInfo_ActivateReq.Size(m)
}
func (m *ActivateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateReq.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateReq proto.InternalMessageInfo

func (m *ActivateReq) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ActivateReq) GetEvseId() uint64 {
	if m != nil {
		return m.EvseId
	}
	return 0
}

type SNInfo struct {
	Id                   uint64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty,string"`
	Sn                   string    `protobuf:"bytes,2,opt,name=sn,proto3" json:"sn,omitempty"`
	State                SNState   `protobuf:"varint,3,opt,name=state,proto3,enum=sn.SNState" json:"state,omitempty"`
	ApplyId              uint64    `protobuf:"varint,4,opt,name=apply_id,json=applyId,proto3" json:"apply_id,omitempty,string"`
	OperatorId           uint64    `protobuf:"varint,5,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty,string"`
	ApplyMode            ApplyMode `protobuf:"varint,6,opt,name=apply_mode,json=applyMode,proto3,enum=sn.ApplyMode" json:"apply_mode,omitempty"`
	CreatedAt            uint64    `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty,string"`
	ExpiredAt            uint64    `protobuf:"varint,8,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty,string"`
	ActivatedAt          uint64    `protobuf:"varint,9,opt,name=activated_at,json=activatedAt,proto3" json:"activated_at,omitempty,string"`
	ActivatedEvseId      uint64    `protobuf:"varint,10,opt,name=activated_evse_id,json=activatedEvseId,proto3" json:"activated_evse_id,omitempty,string"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SNInfo) Reset()         { *m = SNInfo{} }
func (m *SNInfo) String() string { return proto.CompactTextString(m) }
func (*SNInfo) ProtoMessage()    {}
func (*SNInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d9f65f69f36f2d7, []int{8}
}

func (m *SNInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SNInfo.Unmarshal(m, b)
}
func (m *SNInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SNInfo.Marshal(b, m, deterministic)
}
func (m *SNInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SNInfo.Merge(m, src)
}
func (m *SNInfo) XXX_Size() int {
	return xxx_messageInfo_SNInfo.Size(m)
}
func (m *SNInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SNInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SNInfo proto.InternalMessageInfo

func (m *SNInfo) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SNInfo) GetSn() string {
	if m != nil {
		return m.Sn
	}
	return ""
}

func (m *SNInfo) GetState() SNState {
	if m != nil {
		return m.State
	}
	return SNState_SNS_UNKNOWN
}

func (m *SNInfo) GetApplyId() uint64 {
	if m != nil {
		return m.ApplyId
	}
	return 0
}

func (m *SNInfo) GetOperatorId() uint64 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *SNInfo) GetApplyMode() ApplyMode {
	if m != nil {
		return m.ApplyMode
	}
	return ApplyMode_AM_UNKNOWN
}

func (m *SNInfo) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *SNInfo) GetExpiredAt() uint64 {
	if m != nil {
		return m.ExpiredAt
	}
	return 0
}

func (m *SNInfo) GetActivatedAt() uint64 {
	if m != nil {
		return m.ActivatedAt
	}
	return 0
}

func (m *SNInfo) GetActivatedEvseId() uint64 {
	if m != nil {
		return m.ActivatedEvseId
	}
	return 0
}

func init() {
	proto.RegisterEnum("sn.SNState", SNState_name, SNState_value)
	proto.RegisterEnum("sn.ApplyMode", ApplyMode_name, ApplyMode_value)
	proto.RegisterType((*SyncAndActivateReq)(nil), "sn.SyncAndActivateReq")
	proto.RegisterType((*ApplyReq)(nil), "sn.ApplyReq")
	proto.RegisterType((*ApplyResp)(nil), "sn.ApplyResp")
	proto.RegisterType((*ListByApplyIDReq)(nil), "sn.ListByApplyIDReq")
	proto.RegisterType((*ListByOperatorIDReq)(nil), "sn.ListByOperatorIDReq")
	proto.RegisterType((*SNInfoList)(nil), "sn.SNInfoList")
	proto.RegisterType((*InfoReq)(nil), "sn.InfoReq")
	proto.RegisterType((*ActivateReq)(nil), "sn.ActivateReq")
	proto.RegisterType((*SNInfo)(nil), "sn.SNInfo")
}

func init() { proto.RegisterFile("sn.proto", fileDescriptor_0d9f65f69f36f2d7) }

var fileDescriptor_0d9f65f69f36f2d7 = []byte{
	// 760 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0x7e, 0xed, 0x7c, 0x7a, 0xdc, 0x7c, 0x74, 0xdb, 0x97, 0x86, 0x20, 0xd4, 0xd4, 0x02, 0x11,
	0xaa, 0x2a, 0x91, 0x82, 0xda, 0x03, 0x3d, 0xb9, 0x24, 0x80, 0x45, 0xeb, 0x54, 0x76, 0x4a, 0x11,
	0x07, 0x2c, 0xd7, 0xde, 0xa6, 0x46, 0xc9, 0xda, 0xf1, 0x3a, 0x15, 0xf9, 0x21, 0x5c, 0x39, 0xf2,
	0x43, 0xb8, 0xf2, 0xa7, 0xd0, 0xae, 0xed, 0x7c, 0x55, 0x6a, 0x25, 0x0e, 0x9c, 0xec, 0x79, 0x9e,
	0x99, 0xd9, 0xd9, 0xd9, 0x67, 0x76, 0xa1, 0x48, 0x49, 0x2b, 0x08, 0xfd, 0xc8, 0x47, 0x22, 0x25,
	0xf5, 0x0d, 0xc7, 0x1f, 0x8f, 0xfd, 0x04, 0x51, 0xbe, 0x00, 0x32, 0x67, 0xc4, 0x51, 0x89, 0xab,
	0x3a, 0x91, 0x77, 0x6b, 0x47, 0xd8, 0xc0, 0x13, 0x54, 0x06, 0x91, 0x92, 0x9a, 0xd0, 0x10, 0x9a,
	0x92, 0x21, 0x52, 0x82, 0x76, 0x41, 0xf6, 0x03, 0x1c, 0xda, 0x91, 0x1f, 0x5a, 0x9e, 0x5b, 0x13,
	0x1b, 0x42, 0x33, 0x6b, 0x40, 0x0a, 0x69, 0x2e, 0xda, 0x81, 0x02, 0xbe, 0xa5, 0x98, 0x91, 0x19,
	0x4e, 0xe6, 0x99, 0xa9, 0xb9, 0xca, 0x6f, 0x01, 0x8a, 0x6a, 0x10, 0x8c, 0x66, 0x2c, 0xed, 0x63,
	0x28, 0xda, 0xec, 0x9f, 0xb9, 0x09, 0xdc, 0xad, 0xc0, 0x6d, 0xcd, 0x7d, 0x78, 0x85, 0x03, 0x80,
	0x38, 0x76, 0xec, 0xbb, 0x98, 0x2f, 0x52, 0xee, 0x94, 0x5a, 0x94, 0xb4, 0x78, 0xf6, 0x33, 0xdf,
	0xc5, 0x86, 0x64, 0xa7, 0xbf, 0x68, 0x0f, 0x36, 0x62, 0x6f, 0x32, 0x1d, 0x5f, 0xe1, 0xb0, 0x96,
	0x6d, 0x08, 0xcd, 0x9c, 0x21, 0x73, 0x4c, 0xe7, 0x10, 0x7a, 0x02, 0x12, 0x25, 0xd6, 0x08, 0x93,
	0x61, 0x74, 0x53, 0xcb, 0x71, 0xbe, 0x48, 0xc9, 0x29, 0xb7, 0xd1, 0xff, 0x90, 0x9f, 0xba, 0x16,
	0x25, 0xb4, 0x96, 0x6f, 0x64, 0x9a, 0x92, 0x91, 0x9b, 0xba, 0x26, 0xa1, 0x8a, 0x0c, 0x52, 0xb2,
	0x19, 0x1a, 0x28, 0xdf, 0x05, 0xa8, 0x9e, 0x7a, 0x34, 0x3a, 0x99, 0x71, 0x4c, 0xeb, 0xb2, 0x2d,
	0xbe, 0x84, 0x42, 0x60, 0x0f, 0x71, 0x88, 0x27, 0x7c, 0x87, 0x72, 0xa7, 0xd2, 0x4a, 0xfa, 0x7d,
	0x6e, 0x0f, 0x59, 0x6f, 0x8d, 0x94, 0x47, 0xc7, 0x50, 0xa6, 0xd8, 0x0e, 0x9d, 0x1b, 0xeb, 0xda,
	0x1b, 0x45, 0x38, 0xa4, 0x35, 0xb1, 0x91, 0x69, 0xca, 0x9d, 0xed, 0x34, 0xc2, 0xe4, 0xec, 0x5b,
	0x4e, 0x1a, 0x25, 0xba, 0x64, 0xd1, 0x95, 0x56, 0x66, 0x56, 0x5a, 0xa9, 0xfc, 0x10, 0x60, 0x2b,
	0xae, 0xab, 0x9f, 0xb6, 0xef, 0x9f, 0x96, 0xb6, 0x76, 0x94, 0x99, 0xf5, 0xa3, 0x54, 0x6c, 0x00,
	0x53, 0xd7, 0xc8, 0xb5, 0xcf, 0xaa, 0x44, 0x07, 0x50, 0x8c, 0x97, 0xa5, 0x41, 0x52, 0x57, 0x75,
	0xb5, 0x2e, 0x1a, 0x18, 0x73, 0x0f, 0xf4, 0x9c, 0xa9, 0xd9, 0xf2, 0xc8, 0xb5, 0x9f, 0xd6, 0x04,
	0x4c, 0x04, 0x71, 0x3e, 0xa3, 0x40, 0x09, 0xfb, 0x52, 0xe5, 0x35, 0x14, 0x38, 0xf0, 0x17, 0x5a,
	0x56, 0x8e, 0x40, 0x5e, 0x9b, 0x85, 0xb9, 0x5c, 0x45, 0xef, 0x1e, 0xa9, 0xff, 0x12, 0x21, 0x1f,
	0xd7, 0x71, 0x27, 0x26, 0xae, 0x41, 0x9c, 0xd7, 0xb0, 0x07, 0x39, 0x1a, 0xd9, 0x51, 0xaa, 0x63,
	0x39, 0xde, 0x82, 0xc9, 0x20, 0x23, 0x66, 0x56, 0x0e, 0x38, 0x7b, 0xef, 0xac, 0xe4, 0x1e, 0x98,
	0x95, 0xfc, 0x03, 0xb3, 0xf2, 0x14, 0xc0, 0x09, 0xb1, 0x1d, 0x61, 0xd7, 0xb2, 0xa3, 0x5a, 0x81,
	0x67, 0x93, 0x12, 0x44, 0x8d, 0x18, 0x8d, 0xbf, 0x05, 0x5e, 0x18, 0xd3, 0xc5, 0x98, 0x4e, 0x10,
	0x35, 0xe2, 0x93, 0x96, 0x74, 0x8b, 0x3b, 0x48, 0xdc, 0x41, 0x9e, 0x63, 0x6a, 0x84, 0xf6, 0x61,
	0x73, 0xe1, 0x92, 0xf6, 0x0e, 0xb8, 0x5f, 0x65, 0x4e, 0xf4, 0x78, 0x13, 0xf7, 0x2f, 0xa1, 0x90,
	0x34, 0x02, 0x55, 0x40, 0x36, 0x75, 0xd3, 0xba, 0xd0, 0x3f, 0xe8, 0xfd, 0x4b, 0xbd, 0xfa, 0x1f,
	0xda, 0x81, 0x2d, 0x06, 0x5c, 0xaa, 0xda, 0xc0, 0x52, 0xdf, 0x0c, 0xb4, 0x8f, 0xea, 0x40, 0xeb,
	0xeb, 0x55, 0x01, 0x6d, 0x42, 0x89, 0x11, 0x09, 0xd6, 0xeb, 0x56, 0xc5, 0x34, 0xb8, 0xf7, 0xe9,
	0x5c, 0x33, 0x7a, 0xdd, 0x6a, 0x66, 0xff, 0x28, 0x19, 0x5d, 0xbe, 0xe5, 0x32, 0x80, 0x7a, 0xb6,
	0x94, 0x39, 0xb6, 0xd5, 0x8b, 0x41, 0xff, 0x5d, 0x8f, 0x25, 0x94, 0x20, 0xc7, 0xf8, 0x6e, 0x55,
	0xec, 0xfc, 0x14, 0x41, 0x32, 0x75, 0x13, 0x87, 0xb7, 0x9e, 0x83, 0xd1, 0x33, 0xc8, 0xf1, 0x2c,
	0x68, 0x63, 0xde, 0x4e, 0x03, 0x4f, 0xea, 0xa5, 0x25, 0x8b, 0x06, 0xe8, 0x10, 0x4a, 0x2b, 0x17,
	0x03, 0xda, 0x66, 0xfc, 0xfa, 0x5d, 0x51, 0x2f, 0x2f, 0x94, 0xcb, 0x27, 0xe1, 0x38, 0xbd, 0x4f,
	0x16, 0x73, 0x8b, 0x76, 0x16, 0x91, 0x2b, 0xd3, 0x7c, 0x27, 0x78, 0x17, 0xb2, 0x5c, 0x7a, 0x5c,
	0x4b, 0x89, 0xf6, 0xeb, 0x4b, 0xb3, 0x81, 0x5e, 0x40, 0x31, 0x95, 0x35, 0xaa, 0xf0, 0x7a, 0x17,
	0x22, 0x5f, 0x71, 0x3c, 0x84, 0xca, 0xda, 0x93, 0x80, 0x1e, 0x71, 0xfa, 0xce, 0x3b, 0xb1, 0x1c,
	0x76, 0xd2, 0x79, 0x9f, 0xf9, 0xdc, 0x1a, 0x7a, 0x91, 0x43, 0xc7, 0xb4, 0xf5, 0xd5, 0x9f, 0x51,
	0x9f, 0x4c, 0xa6, 0x1e, 0x61, 0xb3, 0xdc, 0x66, 0x58, 0x9b, 0x3f, 0x38, 0x8e, 0x3f, 0x6a, 0x0f,
	0xfd, 0x91, 0x4d, 0x86, 0x6d, 0x4a, 0xae, 0xf2, 0x1c, 0x7b, 0xf5, 0x27, 0x00, 0x00, 0xff, 0xff,
	0x4f, 0x8e, 0x91, 0x4a, 0xa2, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SNServiceClient is the client API for SNService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SNServiceClient interface {
	// 申请sn
	Apply(ctx context.Context, in *ApplyReq, opts ...grpc.CallOption) (*ApplyResp, error)
	// 申请列表
	ListByApplyID(ctx context.Context, in *ListByApplyIDReq, opts ...grpc.CallOption) (*SNInfoList, error)
	ListByOperatorID(ctx context.Context, in *ListByOperatorIDReq, opts ...grpc.CallOption) (*SNInfoList, error)
	// 获取信息
	Info(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*SNInfo, error)
	// 激活SN
	Activate(ctx context.Context, in *ActivateReq, opts ...grpc.CallOption) (*SNInfo, error)
	// 同步并激活sn信息，
	SyncAndActivate(ctx context.Context, in *SyncAndActivateReq, opts ...grpc.CallOption) (*SNInfo, error)
}

type sNServiceClient struct {
	cc *grpc.ClientConn
}

func NewSNServiceClient(cc *grpc.ClientConn) SNServiceClient {
	return &sNServiceClient{cc}
}

func (c *sNServiceClient) Apply(ctx context.Context, in *ApplyReq, opts ...grpc.CallOption) (*ApplyResp, error) {
	out := new(ApplyResp)
	err := c.cc.Invoke(ctx, "/sn.SNService/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sNServiceClient) ListByApplyID(ctx context.Context, in *ListByApplyIDReq, opts ...grpc.CallOption) (*SNInfoList, error) {
	out := new(SNInfoList)
	err := c.cc.Invoke(ctx, "/sn.SNService/ListByApplyID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sNServiceClient) ListByOperatorID(ctx context.Context, in *ListByOperatorIDReq, opts ...grpc.CallOption) (*SNInfoList, error) {
	out := new(SNInfoList)
	err := c.cc.Invoke(ctx, "/sn.SNService/ListByOperatorID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sNServiceClient) Info(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*SNInfo, error) {
	out := new(SNInfo)
	err := c.cc.Invoke(ctx, "/sn.SNService/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sNServiceClient) Activate(ctx context.Context, in *ActivateReq, opts ...grpc.CallOption) (*SNInfo, error) {
	out := new(SNInfo)
	err := c.cc.Invoke(ctx, "/sn.SNService/Activate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sNServiceClient) SyncAndActivate(ctx context.Context, in *SyncAndActivateReq, opts ...grpc.CallOption) (*SNInfo, error) {
	out := new(SNInfo)
	err := c.cc.Invoke(ctx, "/sn.SNService/SyncAndActivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SNServiceServer is the server API for SNService service.
type SNServiceServer interface {
	// 申请sn
	Apply(context.Context, *ApplyReq) (*ApplyResp, error)
	// 申请列表
	ListByApplyID(context.Context, *ListByApplyIDReq) (*SNInfoList, error)
	ListByOperatorID(context.Context, *ListByOperatorIDReq) (*SNInfoList, error)
	// 获取信息
	Info(context.Context, *InfoReq) (*SNInfo, error)
	// 激活SN
	Activate(context.Context, *ActivateReq) (*SNInfo, error)
	// 同步并激活sn信息，
	SyncAndActivate(context.Context, *SyncAndActivateReq) (*SNInfo, error)
}

func RegisterSNServiceServer(s *grpc.Server, srv SNServiceServer) {
	s.RegisterService(&_SNService_serviceDesc, srv)
}

func _SNService_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SNServiceServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sn.SNService/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SNServiceServer).Apply(ctx, req.(*ApplyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SNService_ListByApplyID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListByApplyIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SNServiceServer).ListByApplyID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sn.SNService/ListByApplyID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SNServiceServer).ListByApplyID(ctx, req.(*ListByApplyIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SNService_ListByOperatorID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListByOperatorIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SNServiceServer).ListByOperatorID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sn.SNService/ListByOperatorID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SNServiceServer).ListByOperatorID(ctx, req.(*ListByOperatorIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SNService_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SNServiceServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sn.SNService/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SNServiceServer).Info(ctx, req.(*InfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SNService_Activate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SNServiceServer).Activate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sn.SNService/Activate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SNServiceServer).Activate(ctx, req.(*ActivateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SNService_SyncAndActivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncAndActivateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SNServiceServer).SyncAndActivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sn.SNService/SyncAndActivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SNServiceServer).SyncAndActivate(ctx, req.(*SyncAndActivateReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SNService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sn.SNService",
	HandlerType: (*SNServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Apply",
			Handler:    _SNService_Apply_Handler,
		},
		{
			MethodName: "ListByApplyID",
			Handler:    _SNService_ListByApplyID_Handler,
		},
		{
			MethodName: "ListByOperatorID",
			Handler:    _SNService_ListByOperatorID_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _SNService_Info_Handler,
		},
		{
			MethodName: "Activate",
			Handler:    _SNService_Activate_Handler,
		},
		{
			MethodName: "SyncAndActivate",
			Handler:    _SNService_SyncAndActivate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sn.proto",
}
