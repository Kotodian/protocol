// Code generated by protoc-gen-go. DO NOT EDIT.
// source: configmap.proto

package configmap

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Node 节点信息
type Node struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 map[string]string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Child                map[string]*Node  `protobuf:"bytes,3,rep,name=child,proto3" json:"child,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd9a4fcd82d33260, []int{0}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Node) GetChild() map[string]*Node {
	if m != nil {
		return m.Child
	}
	return nil
}

// 查询
type QueryReq struct {
	Tos                  string   `protobuf:"bytes,1,opt,name=tos,proto3" json:"tos,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Depth                int32    `protobuf:"varint,3,opt,name=depth,proto3" json:"depth,omitempty"`
	Limit                int32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32    `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryReq) Reset()         { *m = QueryReq{} }
func (m *QueryReq) String() string { return proto.CompactTextString(m) }
func (*QueryReq) ProtoMessage()    {}
func (*QueryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd9a4fcd82d33260, []int{1}
}

func (m *QueryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryReq.Unmarshal(m, b)
}
func (m *QueryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryReq.Marshal(b, m, deterministic)
}
func (m *QueryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryReq.Merge(m, src)
}
func (m *QueryReq) XXX_Size() int {
	return xxx_messageInfo_QueryReq.Size(m)
}
func (m *QueryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryReq proto.InternalMessageInfo

func (m *QueryReq) GetTos() string {
	if m != nil {
		return m.Tos
	}
	return ""
}

func (m *QueryReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QueryReq) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *QueryReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *QueryReq) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type QueryResp struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Total                int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResp) Reset()         { *m = QueryResp{} }
func (m *QueryResp) String() string { return proto.CompactTextString(m) }
func (*QueryResp) ProtoMessage()    {}
func (*QueryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd9a4fcd82d33260, []int{2}
}

func (m *QueryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResp.Unmarshal(m, b)
}
func (m *QueryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResp.Marshal(b, m, deterministic)
}
func (m *QueryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResp.Merge(m, src)
}
func (m *QueryResp) XXX_Size() int {
	return xxx_messageInfo_QueryResp.Size(m)
}
func (m *QueryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResp proto.InternalMessageInfo

func (m *QueryResp) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *QueryResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

// 添加
type AddReq struct {
	Tos                  string   `protobuf:"bytes,1,opt,name=tos,proto3" json:"tos,omitempty"`
	Pid                  string   `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Node                 *Node    `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddReq) Reset()         { *m = AddReq{} }
func (m *AddReq) String() string { return proto.CompactTextString(m) }
func (*AddReq) ProtoMessage()    {}
func (*AddReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd9a4fcd82d33260, []int{3}
}

func (m *AddReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReq.Unmarshal(m, b)
}
func (m *AddReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReq.Marshal(b, m, deterministic)
}
func (m *AddReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReq.Merge(m, src)
}
func (m *AddReq) XXX_Size() int {
	return xxx_messageInfo_AddReq.Size(m)
}
func (m *AddReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddReq proto.InternalMessageInfo

func (m *AddReq) GetTos() string {
	if m != nil {
		return m.Tos
	}
	return ""
}

func (m *AddReq) GetPid() string {
	if m != nil {
		return m.Pid
	}
	return ""
}

func (m *AddReq) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type AddResp struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsNew                bool     `protobuf:"varint,2,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResp) Reset()         { *m = AddResp{} }
func (m *AddResp) String() string { return proto.CompactTextString(m) }
func (*AddResp) ProtoMessage()    {}
func (*AddResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd9a4fcd82d33260, []int{4}
}

func (m *AddResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResp.Unmarshal(m, b)
}
func (m *AddResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResp.Marshal(b, m, deterministic)
}
func (m *AddResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResp.Merge(m, src)
}
func (m *AddResp) XXX_Size() int {
	return xxx_messageInfo_AddResp.Size(m)
}
func (m *AddResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddResp proto.InternalMessageInfo

func (m *AddResp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddResp) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

// 删除
type DelReq struct {
	Tos                  string   `protobuf:"bytes,1,opt,name=tos,proto3" json:"tos,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelReq) Reset()         { *m = DelReq{} }
func (m *DelReq) String() string { return proto.CompactTextString(m) }
func (*DelReq) ProtoMessage()    {}
func (*DelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd9a4fcd82d33260, []int{5}
}

func (m *DelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelReq.Unmarshal(m, b)
}
func (m *DelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelReq.Marshal(b, m, deterministic)
}
func (m *DelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelReq.Merge(m, src)
}
func (m *DelReq) XXX_Size() int {
	return xxx_messageInfo_DelReq.Size(m)
}
func (m *DelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelReq proto.InternalMessageInfo

func (m *DelReq) GetTos() string {
	if m != nil {
		return m.Tos
	}
	return ""
}

func (m *DelReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DelResp struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelResp) Reset()         { *m = DelResp{} }
func (m *DelResp) String() string { return proto.CompactTextString(m) }
func (*DelResp) ProtoMessage()    {}
func (*DelResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd9a4fcd82d33260, []int{6}
}

func (m *DelResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelResp.Unmarshal(m, b)
}
func (m *DelResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelResp.Marshal(b, m, deterministic)
}
func (m *DelResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelResp.Merge(m, src)
}
func (m *DelResp) XXX_Size() int {
	return xxx_messageInfo_DelResp.Size(m)
}
func (m *DelResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DelResp.DiscardUnknown(m)
}

var xxx_messageInfo_DelResp proto.InternalMessageInfo

func (m *DelResp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// 更新
type UpdateReq struct {
	Tos                  string            `protobuf:"bytes,1,opt,name=tos,proto3" json:"tos,omitempty"`
	Id                   string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Data                 map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateReq) Reset()         { *m = UpdateReq{} }
func (m *UpdateReq) String() string { return proto.CompactTextString(m) }
func (*UpdateReq) ProtoMessage()    {}
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd9a4fcd82d33260, []int{7}
}

func (m *UpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReq.Unmarshal(m, b)
}
func (m *UpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReq.Marshal(b, m, deterministic)
}
func (m *UpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReq.Merge(m, src)
}
func (m *UpdateReq) XXX_Size() int {
	return xxx_messageInfo_UpdateReq.Size(m)
}
func (m *UpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReq proto.InternalMessageInfo

func (m *UpdateReq) GetTos() string {
	if m != nil {
		return m.Tos
	}
	return ""
}

func (m *UpdateReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateReq) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateResp struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResp) Reset()         { *m = UpdateResp{} }
func (m *UpdateResp) String() string { return proto.CompactTextString(m) }
func (*UpdateResp) ProtoMessage()    {}
func (*UpdateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd9a4fcd82d33260, []int{8}
}

func (m *UpdateResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResp.Unmarshal(m, b)
}
func (m *UpdateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResp.Marshal(b, m, deterministic)
}
func (m *UpdateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResp.Merge(m, src)
}
func (m *UpdateResp) XXX_Size() int {
	return xxx_messageInfo_UpdateResp.Size(m)
}
func (m *UpdateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResp proto.InternalMessageInfo

func (m *UpdateResp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Node)(nil), "configmap.Node")
	proto.RegisterMapType((map[string]*Node)(nil), "configmap.Node.ChildEntry")
	proto.RegisterMapType((map[string]string)(nil), "configmap.Node.DataEntry")
	proto.RegisterType((*QueryReq)(nil), "configmap.QueryReq")
	proto.RegisterType((*QueryResp)(nil), "configmap.QueryResp")
	proto.RegisterType((*AddReq)(nil), "configmap.AddReq")
	proto.RegisterType((*AddResp)(nil), "configmap.AddResp")
	proto.RegisterType((*DelReq)(nil), "configmap.DelReq")
	proto.RegisterType((*DelResp)(nil), "configmap.DelResp")
	proto.RegisterType((*UpdateReq)(nil), "configmap.UpdateReq")
	proto.RegisterMapType((map[string]string)(nil), "configmap.UpdateReq.DataEntry")
	proto.RegisterType((*UpdateResp)(nil), "configmap.UpdateResp")
}

func init() { proto.RegisterFile("configmap.proto", fileDescriptor_fd9a4fcd82d33260) }

var fileDescriptor_fd9a4fcd82d33260 = []byte{
	// 501 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0xed, 0xd8, 0xad, 0xa7, 0x52, 0x5b, 0x96, 0x14, 0xb9, 0x16, 0x42, 0xd1, 0x22, 0xa4,
	0x08, 0x81, 0x53, 0x19, 0x55, 0x7c, 0xdc, 0x4a, 0x03, 0x82, 0x4b, 0xa5, 0x1a, 0x71, 0xe1, 0x82,
	0x16, 0xef, 0x26, 0x5d, 0x70, 0xbc, 0xdb, 0xec, 0xa6, 0x55, 0xfe, 0x0a, 0x7f, 0x8c, 0x1f, 0xc3,
	0x05, 0x79, 0xd7, 0x71, 0xdd, 0xc4, 0x42, 0x55, 0x6f, 0x9e, 0x37, 0x6f, 0xde, 0xbc, 0x9d, 0x19,
	0x19, 0xf6, 0x72, 0x51, 0x4e, 0xf8, 0x74, 0x46, 0x64, 0x22, 0xe7, 0x42, 0x0b, 0x14, 0x36, 0x00,
	0xfe, 0xeb, 0x40, 0xef, 0x4c, 0x50, 0x86, 0x76, 0xc1, 0xe5, 0x34, 0x72, 0x06, 0xce, 0x30, 0xcc,
	0x5c, 0x4e, 0xd1, 0x4b, 0xe8, 0x51, 0xa2, 0x49, 0xe4, 0x0e, 0xbc, 0xe1, 0x4e, 0x7a, 0x98, 0xdc,
	0x68, 0x54, 0xf4, 0x64, 0x4c, 0x34, 0xf9, 0x50, 0xea, 0xf9, 0x32, 0x33, 0x34, 0x74, 0x04, 0x7e,
	0x7e, 0xc1, 0x0b, 0x1a, 0x79, 0x86, 0x1f, 0xaf, 0xf3, 0x4f, 0xab, 0xa4, 0x2d, 0xb0, 0xc4, 0xf8,
	0x35, 0x84, 0x8d, 0x08, 0xda, 0x07, 0xef, 0x17, 0x5b, 0xd6, 0xed, 0xab, 0x4f, 0xd4, 0x07, 0xff,
	0x8a, 0x14, 0x0b, 0x16, 0xb9, 0x06, 0xb3, 0xc1, 0x3b, 0xf7, 0x8d, 0x13, 0x7f, 0x06, 0xb8, 0x51,
	0xeb, 0xa8, 0x7c, 0xd6, 0xae, 0xdc, 0x49, 0xf7, 0xd6, 0xac, 0xb4, 0xa4, 0xb0, 0x84, 0xed, 0xf3,
	0x05, 0x9b, 0x2f, 0x33, 0x76, 0x59, 0x09, 0x69, 0xa1, 0x56, 0x42, 0x5a, 0xa8, 0x7a, 0x24, 0x6e,
	0x33, 0x92, 0x3e, 0xf8, 0x94, 0x49, 0x7d, 0x11, 0x79, 0x03, 0x67, 0xe8, 0x67, 0x36, 0xa8, 0xd0,
	0x82, 0xcf, 0xb8, 0x8e, 0x7a, 0x16, 0x35, 0x01, 0x7a, 0x04, 0x81, 0x98, 0x4c, 0x14, 0xd3, 0x91,
	0x6f, 0xe0, 0x3a, 0xc2, 0x1f, 0x21, 0xac, 0x3b, 0x2a, 0x89, 0x9e, 0x42, 0xaf, 0x14, 0x94, 0x99,
	0x9e, 0x1d, 0x46, 0x4d, 0xb2, 0xd2, 0xd7, 0x42, 0x93, 0xc2, 0x18, 0xf1, 0x33, 0x1b, 0xe0, 0x73,
	0x08, 0x4e, 0x28, 0xed, 0xf6, 0xbd, 0x0f, 0x9e, 0x6c, 0x8c, 0x57, 0x9f, 0x4d, 0x23, 0xef, 0x3f,
	0x8d, 0xf0, 0x11, 0x6c, 0x19, 0x49, 0x25, 0x37, 0x8e, 0xe1, 0x00, 0x02, 0xae, 0xbe, 0x97, 0xec,
	0xda, 0x88, 0x6e, 0x67, 0x3e, 0x57, 0x67, 0xec, 0x1a, 0x3f, 0x87, 0x60, 0xcc, 0x8a, 0x3b, 0x0d,
	0x0f, 0x1f, 0xc2, 0x96, 0xe1, 0x6e, 0xaa, 0xe3, 0xdf, 0x0e, 0x84, 0x5f, 0x25, 0x25, 0x9a, 0xdd,
	0x6d, 0x0f, 0x69, 0x7d, 0x9a, 0xf6, 0xd4, 0x9e, 0xb4, 0x5e, 0xd3, 0xa8, 0xac, 0xdf, 0xe7, 0xbd,
	0xaf, 0x0d, 0x3f, 0x06, 0x58, 0xa9, 0x6e, 0x5a, 0x4f, 0xff, 0x38, 0xb0, 0x7b, 0x6a, 0xda, 0x7f,
	0x61, 0xf3, 0x2b, 0x9e, 0x33, 0x85, 0x52, 0xf0, 0xcd, 0x86, 0xd1, 0xc3, 0x96, 0xb1, 0xd5, 0x95,
	0xc5, 0xfd, 0x4d, 0x50, 0x49, 0xf4, 0x02, 0xbc, 0x13, 0x4a, 0xd1, 0x83, 0x56, 0xd2, 0x6e, 0x37,
	0x46, 0xeb, 0x90, 0x65, 0x8f, 0x59, 0x71, 0x8b, 0x6d, 0xd7, 0x70, 0x8b, 0xbd, 0x9a, 0xf6, 0x31,
	0x04, 0xf6, 0x01, 0xa8, 0xdf, 0x35, 0xa9, 0xf8, 0xa0, 0x03, 0x55, 0xf2, 0xfd, 0xdb, 0x4f, 0xde,
	0xb7, 0xe3, 0x29, 0xd7, 0xb9, 0x9a, 0xa9, 0xe4, 0xa7, 0x58, 0x2a, 0x51, 0x5e, 0x2e, 0x78, 0x99,
	0xe4, 0x62, 0x36, 0xaa, 0xb0, 0x91, 0xf9, 0x95, 0xe4, 0xa2, 0x18, 0x4d, 0x45, 0x41, 0xca, 0xe9,
	0xa8, 0x51, 0xf9, 0x11, 0x98, 0xd4, 0xab, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x74, 0x97, 0xb9,
	0xbe, 0x78, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigServicesClient is the client API for ConfigServices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigServicesClient interface {
	Query(ctx context.Context, in *QueryReq, opts ...grpc.CallOption) (*QueryResp, error)
	Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error)
	Del(ctx context.Context, in *DelReq, opts ...grpc.CallOption) (*DelResp, error)
	Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error)
}

type configServicesClient struct {
	cc *grpc.ClientConn
}

func NewConfigServicesClient(cc *grpc.ClientConn) ConfigServicesClient {
	return &configServicesClient{cc}
}

func (c *configServicesClient) Query(ctx context.Context, in *QueryReq, opts ...grpc.CallOption) (*QueryResp, error) {
	out := new(QueryResp)
	err := c.cc.Invoke(ctx, "/configmap.ConfigServices/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServicesClient) Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error) {
	out := new(AddResp)
	err := c.cc.Invoke(ctx, "/configmap.ConfigServices/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServicesClient) Del(ctx context.Context, in *DelReq, opts ...grpc.CallOption) (*DelResp, error) {
	out := new(DelResp)
	err := c.cc.Invoke(ctx, "/configmap.ConfigServices/Del", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServicesClient) Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error) {
	out := new(UpdateResp)
	err := c.cc.Invoke(ctx, "/configmap.ConfigServices/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigServicesServer is the server API for ConfigServices service.
type ConfigServicesServer interface {
	Query(context.Context, *QueryReq) (*QueryResp, error)
	Add(context.Context, *AddReq) (*AddResp, error)
	Del(context.Context, *DelReq) (*DelResp, error)
	Update(context.Context, *UpdateReq) (*UpdateResp, error)
}

func RegisterConfigServicesServer(s *grpc.Server, srv ConfigServicesServer) {
	s.RegisterService(&_ConfigServices_serviceDesc, srv)
}

func _ConfigServices_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServicesServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configmap.ConfigServices/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServicesServer).Query(ctx, req.(*QueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigServices_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServicesServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configmap.ConfigServices/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServicesServer).Add(ctx, req.(*AddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigServices_Del_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServicesServer).Del(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configmap.ConfigServices/Del",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServicesServer).Del(ctx, req.(*DelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigServices_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServicesServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configmap.ConfigServices/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServicesServer).Update(ctx, req.(*UpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigServices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "configmap.ConfigServices",
	HandlerType: (*ConfigServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Query",
			Handler:    _ConfigServices_Query_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _ConfigServices_Add_Handler,
		},
		{
			MethodName: "Del",
			Handler:    _ConfigServices_Del_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ConfigServices_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "configmap.proto",
}
