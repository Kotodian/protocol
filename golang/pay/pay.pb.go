// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pay.proto

package pay

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// PayMode 支付平台
type PayMode int32

const (
	PayMode_Unknow       PayMode = 0
	PayMode_Wechat       PayMode = 1
	PayMode_Alipay       PayMode = 2
	PayMode_Group        PayMode = 3
	PayMode_Balance      PayMode = 4
	PayMode_WechatApp    PayMode = 5
	PayMode_AlipayApp    PayMode = 6
	PayMode_ThirdWechat  PayMode = 7
	PayMode_ThirdAlipay  PayMode = 8
	PayMode_ThirdBalance PayMode = 9
	PayMode_WechatMin    PayMode = 10
	PayMode_AlipayMin    PayMode = 11
	PayMode_WechatPC     PayMode = 12
	PayMode_CmbPay       PayMode = 13
	PayMode_Free         PayMode = 9999
)

var PayMode_name = map[int32]string{
	0:    "Unknow",
	1:    "Wechat",
	2:    "Alipay",
	3:    "Group",
	4:    "Balance",
	5:    "WechatApp",
	6:    "AlipayApp",
	7:    "ThirdWechat",
	8:    "ThirdAlipay",
	9:    "ThirdBalance",
	10:   "WechatMin",
	11:   "AlipayMin",
	12:   "WechatPC",
	13:   "CmbPay",
	9999: "Free",
}

var PayMode_value = map[string]int32{
	"Unknow":       0,
	"Wechat":       1,
	"Alipay":       2,
	"Group":        3,
	"Balance":      4,
	"WechatApp":    5,
	"AlipayApp":    6,
	"ThirdWechat":  7,
	"ThirdAlipay":  8,
	"ThirdBalance": 9,
	"WechatMin":    10,
	"AlipayMin":    11,
	"WechatPC":     12,
	"CmbPay":       13,
	"Free":         9999,
}

func (x PayMode) String() string {
	return proto.EnumName(PayMode_name, int32(x))
}

func (PayMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0564d675d5c516e0, []int{0}
}

// BizType 业务类型
type BizType int32

const (
	BizType_OrderCharge     BizType = 0
	BizType_CarRecharge     BizType = 1
	BizType_OrderPayback    BizType = 2
	BizType_OrderRefund     BizType = 3
	BizType_BalanceRecharge BizType = 4
	BizType_SmsRecharge     BizType = 5
)

var BizType_name = map[int32]string{
	0: "OrderCharge",
	1: "CarRecharge",
	2: "OrderPayback",
	3: "OrderRefund",
	4: "BalanceRecharge",
	5: "SmsRecharge",
}

var BizType_value = map[string]int32{
	"OrderCharge":     0,
	"CarRecharge":     1,
	"OrderPayback":    2,
	"OrderRefund":     3,
	"BalanceRecharge": 4,
	"SmsRecharge":     5,
}

func (x BizType) String() string {
	return proto.EnumName(BizType_name, int32(x))
}

func (BizType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0564d675d5c516e0, []int{1}
}

// 交易状态
type TradeStatus int32

const (
	TradeStatus_Waiting TradeStatus = 0
	TradeStatus_Success TradeStatus = 1
	TradeStatus_Failure TradeStatus = 2
	TradeStatus_Paying  TradeStatus = 3
	TradeStatus_Closed  TradeStatus = 4
	TradeStatus_Timeout TradeStatus = 5
)

var TradeStatus_name = map[int32]string{
	0: "Waiting",
	1: "Success",
	2: "Failure",
	3: "Paying",
	4: "Closed",
	5: "Timeout",
}

var TradeStatus_value = map[string]int32{
	"Waiting": 0,
	"Success": 1,
	"Failure": 2,
	"Paying":  3,
	"Closed":  4,
	"Timeout": 5,
}

func (x TradeStatus) String() string {
	return proto.EnumName(TradeStatus_name, int32(x))
}

func (TradeStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0564d675d5c516e0, []int{2}
}

// 退款状态
type RefundStatus int32

const (
	RefundStatus_RefundIng     RefundStatus = 0
	RefundStatus_RefundSuccess RefundStatus = 1
	RefundStatus_RefundFailure RefundStatus = 2
)

var RefundStatus_name = map[int32]string{
	0: "RefundIng",
	1: "RefundSuccess",
	2: "RefundFailure",
}

var RefundStatus_value = map[string]int32{
	"RefundIng":     0,
	"RefundSuccess": 1,
	"RefundFailure": 2,
}

func (x RefundStatus) String() string {
	return proto.EnumName(RefundStatus_name, int32(x))
}

func (RefundStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0564d675d5c516e0, []int{3}
}

type TradeReq struct {
	Amount               int32    `protobuf:"varint,1,opt,name=Amount,proto3" json:"Amount,omitempty"`
	PlatformType         int32    `protobuf:"varint,2,opt,name=PlatformType,proto3" json:"PlatformType,omitempty"`
	Subject              string   `protobuf:"bytes,3,opt,name=Subject,proto3" json:"Subject,omitempty"`
	OutUserID            string   `protobuf:"bytes,4,opt,name=OutUserID,proto3" json:"OutUserID,omitempty"`
	OutTradeNo           string   `protobuf:"bytes,5,opt,name=OutTradeNo,proto3" json:"OutTradeNo,omitempty"`
	AppID                string   `protobuf:"bytes,6,opt,name=AppID,proto3" json:"AppID,omitempty"`
	IP                   string   `protobuf:"bytes,7,opt,name=IP,proto3" json:"IP,omitempty"`
	TradeType            string   `protobuf:"bytes,8,opt,name=TradeType,proto3" json:"TradeType,omitempty"`
	NotifiyURL           string   `protobuf:"bytes,9,opt,name=NotifiyURL,proto3" json:"NotifiyURL,omitempty"`
	Extra                string   `protobuf:"bytes,10,opt,name=Extra,proto3" json:"Extra,omitempty"`
	PayMode              int32    `protobuf:"varint,11,opt,name=PayMode,proto3" json:"PayMode,omitempty"`
	BizType              int32    `protobuf:"varint,12,opt,name=BizType,proto3" json:"BizType,omitempty"`
	ReturnURL            string   `protobuf:"bytes,13,opt,name=ReturnURL,proto3" json:"ReturnURL,omitempty"`
	TradeTime            int32    `protobuf:"varint,14,opt,name=TradeTime,proto3" json:"TradeTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeReq) Reset()         { *m = TradeReq{} }
func (m *TradeReq) String() string { return proto.CompactTextString(m) }
func (*TradeReq) ProtoMessage()    {}
func (*TradeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0564d675d5c516e0, []int{0}
}

func (m *TradeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeReq.Unmarshal(m, b)
}
func (m *TradeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeReq.Marshal(b, m, deterministic)
}
func (m *TradeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeReq.Merge(m, src)
}
func (m *TradeReq) XXX_Size() int {
	return xxx_messageInfo_TradeReq.Size(m)
}
func (m *TradeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeReq.DiscardUnknown(m)
}

var xxx_messageInfo_TradeReq proto.InternalMessageInfo

func (m *TradeReq) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TradeReq) GetPlatformType() int32 {
	if m != nil {
		return m.PlatformType
	}
	return 0
}

func (m *TradeReq) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *TradeReq) GetOutUserID() string {
	if m != nil {
		return m.OutUserID
	}
	return ""
}

func (m *TradeReq) GetOutTradeNo() string {
	if m != nil {
		return m.OutTradeNo
	}
	return ""
}

func (m *TradeReq) GetAppID() string {
	if m != nil {
		return m.AppID
	}
	return ""
}

func (m *TradeReq) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *TradeReq) GetTradeType() string {
	if m != nil {
		return m.TradeType
	}
	return ""
}

func (m *TradeReq) GetNotifiyURL() string {
	if m != nil {
		return m.NotifiyURL
	}
	return ""
}

func (m *TradeReq) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *TradeReq) GetPayMode() int32 {
	if m != nil {
		return m.PayMode
	}
	return 0
}

func (m *TradeReq) GetBizType() int32 {
	if m != nil {
		return m.BizType
	}
	return 0
}

func (m *TradeReq) GetReturnURL() string {
	if m != nil {
		return m.ReturnURL
	}
	return ""
}

func (m *TradeReq) GetTradeTime() int32 {
	if m != nil {
		return m.TradeTime
	}
	return 0
}

type TradeResp struct {
	TradeID              string    `protobuf:"bytes,1,opt,name=TradeID,proto3" json:"TradeID,omitempty"`
	Status               int32     `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	PayInfo              []byte    `protobuf:"bytes,3,opt,name=PayInfo,proto3" json:"PayInfo,omitempty"`
	TradeReq             *TradeReq `protobuf:"bytes,4,opt,name=TradeReq,proto3" json:"TradeReq,omitempty"`
	Balance              int64     `protobuf:"varint,5,opt,name=Balance,proto3" json:"Balance,omitempty,string"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TradeResp) Reset()         { *m = TradeResp{} }
func (m *TradeResp) String() string { return proto.CompactTextString(m) }
func (*TradeResp) ProtoMessage()    {}
func (*TradeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0564d675d5c516e0, []int{1}
}

func (m *TradeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeResp.Unmarshal(m, b)
}
func (m *TradeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeResp.Marshal(b, m, deterministic)
}
func (m *TradeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeResp.Merge(m, src)
}
func (m *TradeResp) XXX_Size() int {
	return xxx_messageInfo_TradeResp.Size(m)
}
func (m *TradeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeResp.DiscardUnknown(m)
}

var xxx_messageInfo_TradeResp proto.InternalMessageInfo

func (m *TradeResp) GetTradeID() string {
	if m != nil {
		return m.TradeID
	}
	return ""
}

func (m *TradeResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TradeResp) GetPayInfo() []byte {
	if m != nil {
		return m.PayInfo
	}
	return nil
}

func (m *TradeResp) GetTradeReq() *TradeReq {
	if m != nil {
		return m.TradeReq
	}
	return nil
}

func (m *TradeResp) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type TradeStatusReq struct {
	OutTradeNo           string   `protobuf:"bytes,1,opt,name=OutTradeNo,proto3" json:"OutTradeNo,omitempty"`
	AppID                string   `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeStatusReq) Reset()         { *m = TradeStatusReq{} }
func (m *TradeStatusReq) String() string { return proto.CompactTextString(m) }
func (*TradeStatusReq) ProtoMessage()    {}
func (*TradeStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0564d675d5c516e0, []int{2}
}

func (m *TradeStatusReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeStatusReq.Unmarshal(m, b)
}
func (m *TradeStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeStatusReq.Marshal(b, m, deterministic)
}
func (m *TradeStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeStatusReq.Merge(m, src)
}
func (m *TradeStatusReq) XXX_Size() int {
	return xxx_messageInfo_TradeStatusReq.Size(m)
}
func (m *TradeStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_TradeStatusReq proto.InternalMessageInfo

func (m *TradeStatusReq) GetOutTradeNo() string {
	if m != nil {
		return m.OutTradeNo
	}
	return ""
}

func (m *TradeStatusReq) GetAppID() string {
	if m != nil {
		return m.AppID
	}
	return ""
}

type TradeStatusResp struct {
	OutTradeNo           string      `protobuf:"bytes,1,opt,name=OutTradeNo,proto3" json:"OutTradeNo,omitempty"`
	Status               TradeStatus `protobuf:"varint,2,opt,name=Status,proto3,enum=pay.TradeStatus" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TradeStatusResp) Reset()         { *m = TradeStatusResp{} }
func (m *TradeStatusResp) String() string { return proto.CompactTextString(m) }
func (*TradeStatusResp) ProtoMessage()    {}
func (*TradeStatusResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0564d675d5c516e0, []int{3}
}

func (m *TradeStatusResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeStatusResp.Unmarshal(m, b)
}
func (m *TradeStatusResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeStatusResp.Marshal(b, m, deterministic)
}
func (m *TradeStatusResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeStatusResp.Merge(m, src)
}
func (m *TradeStatusResp) XXX_Size() int {
	return xxx_messageInfo_TradeStatusResp.Size(m)
}
func (m *TradeStatusResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeStatusResp.DiscardUnknown(m)
}

var xxx_messageInfo_TradeStatusResp proto.InternalMessageInfo

func (m *TradeStatusResp) GetOutTradeNo() string {
	if m != nil {
		return m.OutTradeNo
	}
	return ""
}

func (m *TradeStatusResp) GetStatus() TradeStatus {
	if m != nil {
		return m.Status
	}
	return TradeStatus_Waiting
}

type RefundReq struct {
	OutTradeNo           string   `protobuf:"bytes,1,opt,name=OutTradeNo,proto3" json:"OutTradeNo,omitempty"`
	OutRefundNo          string   `protobuf:"bytes,2,opt,name=OutRefundNo,proto3" json:"OutRefundNo,omitempty"`
	AppID                string   `protobuf:"bytes,3,opt,name=AppID,proto3" json:"AppID,omitempty"`
	TotalFee             int32    `protobuf:"varint,4,opt,name=TotalFee,proto3" json:"TotalFee,omitempty"`
	RefundFee            int32    `protobuf:"varint,5,opt,name=RefundFee,proto3" json:"RefundFee,omitempty"`
	PlatformType         int32    `protobuf:"varint,6,opt,name=PlatformType,proto3" json:"PlatformType,omitempty"`
	PayMode              int32    `protobuf:"varint,7,opt,name=PayMode,proto3" json:"PayMode,omitempty"`
	IP                   string   `protobuf:"bytes,8,opt,name=IP,proto3" json:"IP,omitempty"`
	BizType              int32    `protobuf:"varint,9,opt,name=BizType,proto3" json:"BizType,omitempty"`
	TradeTime            int32    `protobuf:"varint,10,opt,name=TradeTime,proto3" json:"TradeTime,omitempty"`
	Extra                string   `protobuf:"bytes,11,opt,name=Extra,proto3" json:"Extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefundReq) Reset()         { *m = RefundReq{} }
func (m *RefundReq) String() string { return proto.CompactTextString(m) }
func (*RefundReq) ProtoMessage()    {}
func (*RefundReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0564d675d5c516e0, []int{4}
}

func (m *RefundReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundReq.Unmarshal(m, b)
}
func (m *RefundReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundReq.Marshal(b, m, deterministic)
}
func (m *RefundReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundReq.Merge(m, src)
}
func (m *RefundReq) XXX_Size() int {
	return xxx_messageInfo_RefundReq.Size(m)
}
func (m *RefundReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundReq.DiscardUnknown(m)
}

var xxx_messageInfo_RefundReq proto.InternalMessageInfo

func (m *RefundReq) GetOutTradeNo() string {
	if m != nil {
		return m.OutTradeNo
	}
	return ""
}

func (m *RefundReq) GetOutRefundNo() string {
	if m != nil {
		return m.OutRefundNo
	}
	return ""
}

func (m *RefundReq) GetAppID() string {
	if m != nil {
		return m.AppID
	}
	return ""
}

func (m *RefundReq) GetTotalFee() int32 {
	if m != nil {
		return m.TotalFee
	}
	return 0
}

func (m *RefundReq) GetRefundFee() int32 {
	if m != nil {
		return m.RefundFee
	}
	return 0
}

func (m *RefundReq) GetPlatformType() int32 {
	if m != nil {
		return m.PlatformType
	}
	return 0
}

func (m *RefundReq) GetPayMode() int32 {
	if m != nil {
		return m.PayMode
	}
	return 0
}

func (m *RefundReq) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *RefundReq) GetBizType() int32 {
	if m != nil {
		return m.BizType
	}
	return 0
}

func (m *RefundReq) GetTradeTime() int32 {
	if m != nil {
		return m.TradeTime
	}
	return 0
}

func (m *RefundReq) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

type RefundResp struct {
	RefundID             int32      `protobuf:"varint,1,opt,name=RefundID,proto3" json:"RefundID,omitempty"`
	Status               int32      `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Response             string     `protobuf:"bytes,3,opt,name=Response,proto3" json:"Response,omitempty"`
	RefundReq            *RefundReq `protobuf:"bytes,4,opt,name=RefundReq,proto3" json:"RefundReq,omitempty"`
	Balance              int64      `protobuf:"varint,5,opt,name=Balance,proto3" json:"Balance,omitempty,string"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RefundResp) Reset()         { *m = RefundResp{} }
func (m *RefundResp) String() string { return proto.CompactTextString(m) }
func (*RefundResp) ProtoMessage()    {}
func (*RefundResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0564d675d5c516e0, []int{5}
}

func (m *RefundResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundResp.Unmarshal(m, b)
}
func (m *RefundResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundResp.Marshal(b, m, deterministic)
}
func (m *RefundResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundResp.Merge(m, src)
}
func (m *RefundResp) XXX_Size() int {
	return xxx_messageInfo_RefundResp.Size(m)
}
func (m *RefundResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundResp.DiscardUnknown(m)
}

var xxx_messageInfo_RefundResp proto.InternalMessageInfo

func (m *RefundResp) GetRefundID() int32 {
	if m != nil {
		return m.RefundID
	}
	return 0
}

func (m *RefundResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *RefundResp) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func (m *RefundResp) GetRefundReq() *RefundReq {
	if m != nil {
		return m.RefundReq
	}
	return nil
}

func (m *RefundResp) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func init() {
	proto.RegisterEnum("pay.PayMode", PayMode_name, PayMode_value)
	proto.RegisterEnum("pay.BizType", BizType_name, BizType_value)
	proto.RegisterEnum("pay.TradeStatus", TradeStatus_name, TradeStatus_value)
	proto.RegisterEnum("pay.RefundStatus", RefundStatus_name, RefundStatus_value)
	proto.RegisterType((*TradeReq)(nil), "pay.TradeReq")
	proto.RegisterType((*TradeResp)(nil), "pay.TradeResp")
	proto.RegisterType((*TradeStatusReq)(nil), "pay.TradeStatusReq")
	proto.RegisterType((*TradeStatusResp)(nil), "pay.TradeStatusResp")
	proto.RegisterType((*RefundReq)(nil), "pay.RefundReq")
	proto.RegisterType((*RefundResp)(nil), "pay.RefundResp")
}

func init() { proto.RegisterFile("pay.proto", fileDescriptor_0564d675d5c516e0) }

var fileDescriptor_0564d675d5c516e0 = []byte{
	// 858 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xae, 0xe3, 0x38, 0x8d, 0x4f, 0x7e, 0x3a, 0xcc, 0xae, 0x90, 0x55, 0x21, 0x54, 0xe5, 0x02,
	0x75, 0x2b, 0xd4, 0x48, 0xed, 0x13, 0x74, 0x53, 0x0a, 0x91, 0xd8, 0xd6, 0x72, 0x5a, 0xad, 0x80,
	0xab, 0xa9, 0x33, 0x4d, 0xbd, 0x9b, 0x78, 0xa6, 0xf6, 0x18, 0x30, 0x4f, 0xc0, 0x1d, 0x37, 0x5c,
	0x72, 0xc9, 0x4b, 0xf0, 0x2a, 0x3c, 0x0d, 0x3a, 0x33, 0xf6, 0xd8, 0x69, 0xa8, 0xe0, 0x2e, 0xdf,
	0x77, 0xce, 0x9c, 0x9f, 0xf9, 0xbe, 0x71, 0xc0, 0x97, 0xac, 0x3c, 0x95, 0x99, 0x50, 0x82, 0xba,
	0x92, 0x95, 0x93, 0x5f, 0x5d, 0xe8, 0xdf, 0x66, 0x6c, 0xc9, 0x23, 0xfe, 0x44, 0x3f, 0x85, 0xde,
	0xc5, 0x46, 0x14, 0xa9, 0x0a, 0x9c, 0x23, 0xe7, 0xd8, 0x8b, 0x2a, 0x44, 0x27, 0x30, 0x0c, 0xd7,
	0x4c, 0x3d, 0x88, 0x6c, 0x73, 0x5b, 0x4a, 0x1e, 0x74, 0x74, 0x74, 0x8b, 0xa3, 0x01, 0xec, 0x2f,
	0x8a, 0xfb, 0x0f, 0x3c, 0x56, 0x81, 0x7b, 0xe4, 0x1c, 0xfb, 0x51, 0x0d, 0xe9, 0x67, 0xe0, 0xdf,
	0x14, 0xea, 0x2e, 0xe7, 0xd9, 0xfc, 0x32, 0xe8, 0xea, 0x58, 0x43, 0xd0, 0xcf, 0x01, 0x6e, 0x0a,
	0xa5, 0x47, 0xb8, 0x16, 0x81, 0xa7, 0xc3, 0x2d, 0x86, 0xbe, 0x06, 0xef, 0x42, 0xca, 0xf9, 0x65,
	0xd0, 0xd3, 0x21, 0x03, 0xe8, 0x18, 0x3a, 0xf3, 0x30, 0xd8, 0xd7, 0x54, 0x67, 0x1e, 0x62, 0x0f,
	0x7d, 0x40, 0x8f, 0xd7, 0x37, 0x3d, 0x2c, 0x81, 0x3d, 0xae, 0x85, 0x4a, 0x1e, 0x92, 0xf2, 0x2e,
	0xfa, 0x36, 0xf0, 0x4d, 0x8f, 0x86, 0xc1, 0x1e, 0x5f, 0xfd, 0xac, 0x32, 0x16, 0x80, 0xe9, 0xa1,
	0x01, 0x6e, 0x14, 0xb2, 0xf2, 0x9d, 0x58, 0xf2, 0x60, 0xa0, 0x17, 0xae, 0x21, 0x46, 0xde, 0x26,
	0xbf, 0xe8, 0x5e, 0x43, 0x13, 0xa9, 0x20, 0xce, 0x11, 0x71, 0x55, 0x64, 0x29, 0x36, 0x1a, 0x99,
	0x39, 0x2c, 0xd1, 0x4c, 0x99, 0x6c, 0x78, 0x30, 0xd6, 0x27, 0x1b, 0x62, 0xf2, 0x87, 0x53, 0x85,
	0x23, 0x9e, 0x4b, 0xec, 0xa1, 0xc1, 0xfc, 0x52, 0x8b, 0xe1, 0x47, 0x35, 0x44, 0x95, 0x16, 0x8a,
	0xa9, 0x22, 0xaf, 0x74, 0xa8, 0x50, 0x35, 0xef, 0x3c, 0x7d, 0x10, 0x5a, 0x81, 0x61, 0x54, 0x43,
	0xfa, 0xa6, 0xd1, 0x58, 0x0b, 0x30, 0x38, 0x1b, 0x9d, 0xa2, 0x0f, 0x6a, 0x32, 0x6a, 0x2c, 0x80,
	0xab, 0xb1, 0x35, 0x4b, 0x63, 0xae, 0xb5, 0x70, 0xa3, 0x1a, 0x4e, 0xae, 0x60, 0xac, 0xb3, 0x4c,
	0x37, 0xcc, 0xdd, 0x96, 0xce, 0x79, 0x59, 0xba, 0x4e, 0x4b, 0xba, 0xc9, 0x0f, 0x70, 0xb0, 0x55,
	0x27, 0x97, 0xff, 0x59, 0xe8, 0x78, 0x6b, 0xe3, 0xf1, 0x19, 0x69, 0xa6, 0xaf, 0xaa, 0x54, 0xf1,
	0xc9, 0x5f, 0x1d, 0x14, 0xe0, 0xa1, 0x48, 0x97, 0xff, 0x67, 0xc0, 0x23, 0x18, 0xdc, 0x14, 0xca,
	0xe4, 0x5f, 0x8b, 0x6a, 0xcc, 0x36, 0xd5, 0xac, 0xe0, 0xb6, 0xdd, 0x77, 0x08, 0xfd, 0x5b, 0xa1,
	0xd8, 0xfa, 0x8a, 0x73, 0x7d, 0x9f, 0x5e, 0x64, 0xb1, 0x71, 0x00, 0x9e, 0xc6, 0xa0, 0x67, 0x34,
	0xb6, 0xc4, 0xce, 0x4b, 0xea, 0xfd, 0xfb, 0x4b, 0xaa, 0x7d, 0xb7, 0xbf, 0xed, 0x3b, 0xe3, 0xfa,
	0xbe, 0x75, 0x7d, 0xcb, 0x87, 0xfe, 0x8e, 0x0f, 0x1b, 0xa7, 0xc1, 0x33, 0xa7, 0x35, 0x7e, 0x1f,
	0xb4, 0xfc, 0x3e, 0xf9, 0xd3, 0x01, 0xa8, 0xef, 0x2e, 0x97, 0xb8, 0xa4, 0x41, 0x95, 0x03, 0xbd,
	0xc8, 0xe2, 0x17, 0x2d, 0xa8, 0xcf, 0xe4, 0x52, 0xa4, 0x39, 0xaf, 0x6e, 0xcc, 0x62, 0xfa, 0x65,
	0x4b, 0x99, 0xca, 0x85, 0x63, 0xad, 0xa3, 0x65, 0xa3, 0x96, 0x74, 0x2f, 0xfa, 0xf0, 0xe4, 0x6f,
	0xc7, 0xde, 0x0f, 0x05, 0xe8, 0xdd, 0xa5, 0x1f, 0x53, 0xf1, 0x13, 0xd9, 0xc3, 0xdf, 0xef, 0x79,
	0xfc, 0xc8, 0x14, 0x71, 0xf0, 0xf7, 0xc5, 0x3a, 0x91, 0xac, 0x24, 0x1d, 0xea, 0x83, 0xf7, 0x75,
	0x26, 0x0a, 0x49, 0x5c, 0x3a, 0xb0, 0x45, 0x49, 0x97, 0x8e, 0xc0, 0x37, 0xf9, 0x17, 0x52, 0x12,
	0x0f, 0xa1, 0x39, 0x82, 0xb0, 0x47, 0x0f, 0x60, 0x70, 0xfb, 0x98, 0x64, 0xcb, 0xaa, 0xe4, 0xbe,
	0x25, 0xaa, 0xba, 0x7d, 0x4a, 0x60, 0xa8, 0x89, 0xba, 0xa2, 0xdf, 0x54, 0x7c, 0x97, 0xa4, 0x04,
	0x9a, 0x8a, 0x08, 0x07, 0x74, 0x08, 0x7d, 0x13, 0x0d, 0x67, 0x64, 0x88, 0x13, 0xce, 0x36, 0xf7,
	0x21, 0x2b, 0xc9, 0x88, 0xfa, 0xd0, 0xbd, 0xca, 0x38, 0x27, 0xbf, 0x5d, 0x9f, 0x28, 0xab, 0x28,
	0x36, 0xbc, 0xc9, 0x96, 0x3c, 0x9b, 0x3d, 0xb2, 0x6c, 0xc5, 0xc9, 0x1e, 0x12, 0x33, 0x96, 0x45,
	0x58, 0x03, 0x09, 0x07, 0x27, 0xd0, 0x19, 0x21, 0x2b, 0xef, 0x59, 0xfc, 0x91, 0x74, 0xec, 0x19,
	0x73, 0x8f, 0xc4, 0xa5, 0xaf, 0xe0, 0xa0, 0x9a, 0xcf, 0x9e, 0xeb, 0x62, 0xd6, 0x62, 0x93, 0x5b,
	0xc2, 0x3b, 0xf9, 0x0e, 0x06, 0xad, 0xc7, 0x84, 0xd7, 0xf4, 0x9e, 0x25, 0x2a, 0x49, 0x57, 0x64,
	0x0f, 0xc1, 0xa2, 0x88, 0x63, 0x9e, 0xe7, 0xc4, 0x41, 0x70, 0xc5, 0x92, 0x75, 0x91, 0x71, 0xd2,
	0xc1, 0x15, 0x42, 0x56, 0x62, 0x96, 0xab, 0xd7, 0x59, 0x8b, 0x9c, 0x2f, 0x49, 0x17, 0x93, 0xd0,
	0x65, 0xa2, 0x50, 0xc4, 0x3b, 0x99, 0xc1, 0xd0, 0x0c, 0x53, 0xd5, 0x1e, 0xd5, 0x2e, 0x98, 0xeb,
	0xea, 0x9f, 0xc0, 0xa8, 0x0a, 0xdb, 0x1e, 0x96, 0xb2, 0x9d, 0xce, 0x7e, 0x77, 0x00, 0x42, 0x56,
	0x2e, 0x78, 0xf6, 0x63, 0x12, 0x73, 0xfa, 0x05, 0x78, 0x7a, 0x5c, 0xba, 0xfd, 0x15, 0x3b, 0x1c,
	0xb7, 0x61, 0x2e, 0xe9, 0x1b, 0xe8, 0x99, 0x4a, 0xf4, 0x99, 0xd1, 0x0e, 0x0f, 0xb6, 0x70, 0x2e,
	0xe9, 0x79, 0x6d, 0x68, 0xfa, 0x6a, 0xe7, 0xdb, 0xc2, 0x9f, 0x0e, 0x5f, 0xef, 0x92, 0xb9, 0x7c,
	0x7b, 0xfe, 0x8d, 0xfb, 0xfd, 0x74, 0x95, 0xa8, 0x38, 0xdf, 0xe4, 0xa7, 0x1f, 0x44, 0x99, 0x8b,
	0xf4, 0xa9, 0x48, 0xd2, 0xd3, 0x58, 0x6c, 0xa6, 0xc8, 0x4d, 0xf5, 0xff, 0x6c, 0x2c, 0xd6, 0xd3,
	0x95, 0x58, 0xb3, 0x74, 0x35, 0x95, 0xac, 0xbc, 0xef, 0x69, 0xf2, 0xfc, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x94, 0x5b, 0x22, 0x02, 0x89, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PayServiceClient is the client API for PayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PayServiceClient interface {
	// 交易时触发
	Trade(ctx context.Context, in *TradeReq, opts ...grpc.CallOption) (*TradeResp, error)
	// 退款时触发
	Refund(ctx context.Context, in *RefundReq, opts ...grpc.CallOption) (*RefundResp, error)
	// 交易状态查询
	Status(ctx context.Context, in *TradeStatusReq, opts ...grpc.CallOption) (*TradeStatusResp, error)
}

type payServiceClient struct {
	cc *grpc.ClientConn
}

func NewPayServiceClient(cc *grpc.ClientConn) PayServiceClient {
	return &payServiceClient{cc}
}

func (c *payServiceClient) Trade(ctx context.Context, in *TradeReq, opts ...grpc.CallOption) (*TradeResp, error) {
	out := new(TradeResp)
	err := c.cc.Invoke(ctx, "/pay.PayService/Trade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payServiceClient) Refund(ctx context.Context, in *RefundReq, opts ...grpc.CallOption) (*RefundResp, error) {
	out := new(RefundResp)
	err := c.cc.Invoke(ctx, "/pay.PayService/Refund", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payServiceClient) Status(ctx context.Context, in *TradeStatusReq, opts ...grpc.CallOption) (*TradeStatusResp, error) {
	out := new(TradeStatusResp)
	err := c.cc.Invoke(ctx, "/pay.PayService/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PayServiceServer is the server API for PayService service.
type PayServiceServer interface {
	// 交易时触发
	Trade(context.Context, *TradeReq) (*TradeResp, error)
	// 退款时触发
	Refund(context.Context, *RefundReq) (*RefundResp, error)
	// 交易状态查询
	Status(context.Context, *TradeStatusReq) (*TradeStatusResp, error)
}

func RegisterPayServiceServer(s *grpc.Server, srv PayServiceServer) {
	s.RegisterService(&_PayService_serviceDesc, srv)
}

func _PayService_Trade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayServiceServer).Trade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayService/Trade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayServiceServer).Trade(ctx, req.(*TradeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayService_Refund_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefundReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayServiceServer).Refund(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayService/Refund",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayServiceServer).Refund(ctx, req.(*RefundReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PayService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradeStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pay.PayService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayServiceServer).Status(ctx, req.(*TradeStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pay.PayService",
	HandlerType: (*PayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Trade",
			Handler:    _PayService_Trade_Handler,
		},
		{
			MethodName: "Refund",
			Handler:    _PayService_Refund_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _PayService_Status_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pay.proto",
}
