// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: open.proto

package open

import (
	context "context"
	api "github.com/Kotodian/protocol/golang/api"
	common "github.com/Kotodian/protocol/golang/common"
	coregw "github.com/Kotodian/protocol/golang/coregw"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MerchantApplyStatus int32

const (
	MerchantApplyStatus_MerchantApplyStatusUnknown   MerchantApplyStatus = 0  //
	MerchantApplyStatus_MerchantApplyStatusPending   MerchantApplyStatus = 10 // 待处理
	MerchantApplyStatus_MerchantApplyStatusProcess   MerchantApplyStatus = 20 // 处理中 - 联系客户/和客户沟通中
	MerchantApplyStatus_MerchantApplyStatusProcessed MerchantApplyStatus = 30 // 已处理 - 已建站
	MerchantApplyStatus_MerchantApplyStatusClose     MerchantApplyStatus = 40 // 关闭
)

// Enum value maps for MerchantApplyStatus.
var (
	MerchantApplyStatus_name = map[int32]string{
		0:  "MerchantApplyStatusUnknown",
		10: "MerchantApplyStatusPending",
		20: "MerchantApplyStatusProcess",
		30: "MerchantApplyStatusProcessed",
		40: "MerchantApplyStatusClose",
	}
	MerchantApplyStatus_value = map[string]int32{
		"MerchantApplyStatusUnknown":   0,
		"MerchantApplyStatusPending":   10,
		"MerchantApplyStatusProcess":   20,
		"MerchantApplyStatusProcessed": 30,
		"MerchantApplyStatusClose":     40,
	}
)

func (x MerchantApplyStatus) Enum() *MerchantApplyStatus {
	p := new(MerchantApplyStatus)
	*p = x
	return p
}

func (x MerchantApplyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MerchantApplyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_open_proto_enumTypes[0].Descriptor()
}

func (MerchantApplyStatus) Type() protoreflect.EnumType {
	return &file_open_proto_enumTypes[0]
}

func (x MerchantApplyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MerchantApplyStatus.Descriptor instead.
func (MerchantApplyStatus) EnumDescriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{0}
}

type ApplyResourceType int32

const (
	ApplyResourceType_ApplyResourceTypeUnknow       ApplyResourceType = 0 // 未知
	ApplyResourceType_ApplyResourceTypeCommercial   ApplyResourceType = 1 // 商业
	ApplyResourceType_ApplyResourceTypeManufacturer ApplyResourceType = 2 // 汽车制造商/厂商
	ApplyResourceType_ApplyResourceTypeOperator     ApplyResourceType = 3 // 运营商
	ApplyResourceType_ApplyResourceTypeHardware     ApplyResourceType = 4 // 设备厂商
	ApplyResourceType_ApplyResourceTypeGoverment    ApplyResourceType = 5 // 地方政府
	ApplyResourceType_ApplyResourceTypeProperty     ApplyResourceType = 6 // 物业
	ApplyResourceType_ApplyResourceTypePersonal     ApplyResourceType = 7 // 场地方
)

// Enum value maps for ApplyResourceType.
var (
	ApplyResourceType_name = map[int32]string{
		0: "ApplyResourceTypeUnknow",
		1: "ApplyResourceTypeCommercial",
		2: "ApplyResourceTypeManufacturer",
		3: "ApplyResourceTypeOperator",
		4: "ApplyResourceTypeHardware",
		5: "ApplyResourceTypeGoverment",
		6: "ApplyResourceTypeProperty",
		7: "ApplyResourceTypePersonal",
	}
	ApplyResourceType_value = map[string]int32{
		"ApplyResourceTypeUnknow":       0,
		"ApplyResourceTypeCommercial":   1,
		"ApplyResourceTypeManufacturer": 2,
		"ApplyResourceTypeOperator":     3,
		"ApplyResourceTypeHardware":     4,
		"ApplyResourceTypeGoverment":    5,
		"ApplyResourceTypeProperty":     6,
		"ApplyResourceTypePersonal":     7,
	}
)

func (x ApplyResourceType) Enum() *ApplyResourceType {
	p := new(ApplyResourceType)
	*p = x
	return p
}

func (x ApplyResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplyResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_open_proto_enumTypes[1].Descriptor()
}

func (ApplyResourceType) Type() protoreflect.EnumType {
	return &file_open_proto_enumTypes[1]
}

func (x ApplyResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplyResourceType.Descriptor instead.
func (ApplyResourceType) EnumDescriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{1}
}

type WithdrawStatus int32

const (
	WithdrawStatus_WithdrawStatus_InProcess WithdrawStatus = 0   // 处理中
	WithdrawStatus_WithdrawStatus_Fail      WithdrawStatus = -10 // 失败
	WithdrawStatus_WithdrawStatus_Success   WithdrawStatus = 10  // 成功
)

// Enum value maps for WithdrawStatus.
var (
	WithdrawStatus_name = map[int32]string{
		0:   "WithdrawStatus_InProcess",
		-10: "WithdrawStatus_Fail",
		10:  "WithdrawStatus_Success",
	}
	WithdrawStatus_value = map[string]int32{
		"WithdrawStatus_InProcess": 0,
		"WithdrawStatus_Fail":      -10,
		"WithdrawStatus_Success":   10,
	}
)

func (x WithdrawStatus) Enum() *WithdrawStatus {
	p := new(WithdrawStatus)
	*p = x
	return p
}

func (x WithdrawStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_open_proto_enumTypes[2].Descriptor()
}

func (WithdrawStatus) Type() protoreflect.EnumType {
	return &file_open_proto_enumTypes[2]
}

func (x WithdrawStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawStatus.Descriptor instead.
func (WithdrawStatus) EnumDescriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{2}
}

type MerchantInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MerchantInfoReq) Reset() {
	*x = MerchantInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantInfoReq) ProtoMessage() {}

func (x *MerchantInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantInfoReq.ProtoReflect.Descriptor instead.
func (*MerchantInfoReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{0}
}

type MerchantInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                   // id
	Name            string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                // 名称
	Email           string  `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`                                              // 邮箱
	Phone           string  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`                                              // 手机号
	ImgUrl          string  `protobuf:"bytes,5,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`                              // 图像
	Balance         float64 `protobuf:"fixed64,6,opt,name=balance,proto3" json:"balance,omitempty"`                                        // 账户余额
	CustomerId      uint64  `protobuf:"varint,7,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`                 // 绑定的客户ID，主要用于提现
	BankAccount     string  `protobuf:"bytes,8,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`               // 银行卡号
	BankAccountName string  `protobuf:"bytes,9,opt,name=bank_account_name,json=bankAccountName,proto3" json:"bank_account_name,omitempty"` // 银行卡用户名
	BankCode        string  `protobuf:"bytes,10,opt,name=bank_code,json=bankCode,proto3" json:"bank_code,omitempty"`                       // 银行编号
	BankName        string  `protobuf:"bytes,11,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`                       // 银行名称
}

func (x *MerchantInfoResp) Reset() {
	*x = MerchantInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantInfoResp) ProtoMessage() {}

func (x *MerchantInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantInfoResp.ProtoReflect.Descriptor instead.
func (*MerchantInfoResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{1}
}

func (x *MerchantInfoResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MerchantInfoResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MerchantInfoResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *MerchantInfoResp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *MerchantInfoResp) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *MerchantInfoResp) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *MerchantInfoResp) GetCustomerId() uint64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *MerchantInfoResp) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *MerchantInfoResp) GetBankAccountName() string {
	if x != nil {
		return x.BankAccountName
	}
	return ""
}

func (x *MerchantInfoResp) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *MerchantInfoResp) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

type BindBankCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAccount     string `protobuf:"bytes,1,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`               // 银行卡号
	BankAccountName string `protobuf:"bytes,2,opt,name=bank_account_name,json=bankAccountName,proto3" json:"bank_account_name,omitempty"` // 银行卡用户名
	BankCode        string `protobuf:"bytes,3,opt,name=bank_code,json=bankCode,proto3" json:"bank_code,omitempty"`                        // 银行编号
}

func (x *BindBankCardReq) Reset() {
	*x = BindBankCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindBankCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindBankCardReq) ProtoMessage() {}

func (x *BindBankCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindBankCardReq.ProtoReflect.Descriptor instead.
func (*BindBankCardReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{2}
}

func (x *BindBankCardReq) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *BindBankCardReq) GetBankAccountName() string {
	if x != nil {
		return x.BankAccountName
	}
	return ""
}

func (x *BindBankCardReq) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

type BindBankCardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BindBankCardResp) Reset() {
	*x = BindBankCardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindBankCardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindBankCardResp) ProtoMessage() {}

func (x *BindBankCardResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindBankCardResp.ProtoReflect.Descriptor instead.
func (*BindBankCardResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{3}
}

type UnbindBankCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAccount string `protobuf:"bytes,1,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"` // 银行卡号
}

func (x *UnbindBankCardReq) Reset() {
	*x = UnbindBankCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindBankCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindBankCardReq) ProtoMessage() {}

func (x *UnbindBankCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindBankCardReq.ProtoReflect.Descriptor instead.
func (*UnbindBankCardReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{4}
}

func (x *UnbindBankCardReq) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

type UnbindBankCardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnbindBankCardResp) Reset() {
	*x = UnbindBankCardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindBankCardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindBankCardResp) ProtoMessage() {}

func (x *UnbindBankCardResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindBankCardResp.ProtoReflect.Descriptor instead.
func (*UnbindBankCardResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{5}
}

type MerchantApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName     string             `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`                                          // 姓名
	EvseNum      int32              `protobuf:"varint,2,opt,name=evse_num,json=evseNum,proto3" json:"evse_num,omitempty"`                                            // 设备数量
	VehicleType  coregw.VehicleType `protobuf:"varint,3,opt,name=vehicle_type,json=vehicleType,proto3,enum=coregw.VehicleType" json:"vehicle_type,omitempty"`        // 车类型
	ResourceType ApplyResourceType  `protobuf:"varint,4,opt,name=resource_type,json=resourceType,proto3,enum=open.ApplyResourceType" json:"resource_type,omitempty"` // 资源类型
}

func (x *MerchantApplyReq) Reset() {
	*x = MerchantApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyReq) ProtoMessage() {}

func (x *MerchantApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyReq.ProtoReflect.Descriptor instead.
func (*MerchantApplyReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{6}
}

func (x *MerchantApplyReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *MerchantApplyReq) GetEvseNum() int32 {
	if x != nil {
		return x.EvseNum
	}
	return 0
}

func (x *MerchantApplyReq) GetVehicleType() coregw.VehicleType {
	if x != nil {
		return x.VehicleType
	}
	return coregw.VehicleType_Unknown
}

func (x *MerchantApplyReq) GetResourceType() ApplyResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ApplyResourceType_ApplyResourceTypeUnknow
}

type MerchantApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MerchantApplyResp) Reset() {
	*x = MerchantApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyResp) ProtoMessage() {}

func (x *MerchantApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyResp.ProtoReflect.Descriptor instead.
func (*MerchantApplyResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{7}
}

type MerchantApplyInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MerchantApplyInfoReq) Reset() {
	*x = MerchantApplyInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyInfoReq) ProtoMessage() {}

func (x *MerchantApplyInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyInfoReq.ProtoReflect.Descriptor instead.
func (*MerchantApplyInfoReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{8}
}

type MerchantApplyInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName     string              `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`                                          // 姓名
	EvseNum      int32               `protobuf:"varint,2,opt,name=evse_num,json=evseNum,proto3" json:"evse_num,omitempty"`                                            // 设备数量
	VehicleType  coregw.VehicleType  `protobuf:"varint,3,opt,name=vehicle_type,json=vehicleType,proto3,enum=coregw.VehicleType" json:"vehicle_type,omitempty"`        // 车类型
	ResourceType ApplyResourceType   `protobuf:"varint,4,opt,name=resource_type,json=resourceType,proto3,enum=open.ApplyResourceType" json:"resource_type,omitempty"` // 资源类型
	Status       MerchantApplyStatus `protobuf:"varint,5,opt,name=status,proto3,enum=open.MerchantApplyStatus" json:"status,omitempty"`                               // 申请状态
}

func (x *MerchantApplyInfoResp) Reset() {
	*x = MerchantApplyInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApplyInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApplyInfoResp) ProtoMessage() {}

func (x *MerchantApplyInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApplyInfoResp.ProtoReflect.Descriptor instead.
func (*MerchantApplyInfoResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{9}
}

func (x *MerchantApplyInfoResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *MerchantApplyInfoResp) GetEvseNum() int32 {
	if x != nil {
		return x.EvseNum
	}
	return 0
}

func (x *MerchantApplyInfoResp) GetVehicleType() coregw.VehicleType {
	if x != nil {
		return x.VehicleType
	}
	return coregw.VehicleType_Unknown
}

func (x *MerchantApplyInfoResp) GetResourceType() ApplyResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ApplyResourceType_ApplyResourceTypeUnknow
}

func (x *MerchantApplyInfoResp) GetStatus() MerchantApplyStatus {
	if x != nil {
		return x.Status
	}
	return MerchantApplyStatus_MerchantApplyStatusUnknown
}

type MerchantStationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagereq *common.PageReq `protobuf:"bytes,1,opt,name=pagereq,proto3" json:"pagereq,omitempty"` // 分页
}

func (x *MerchantStationsReq) Reset() {
	*x = MerchantStationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantStationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantStationsReq) ProtoMessage() {}

func (x *MerchantStationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantStationsReq.ProtoReflect.Descriptor instead.
func (*MerchantStationsReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{10}
}

func (x *MerchantStationsReq) GetPagereq() *common.PageReq {
	if x != nil {
		return x.Pagereq
	}
	return nil
}

type MerchantStationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pageresp *common.PageResp `protobuf:"bytes,1,opt,name=pageresp,proto3" json:"pageresp,omitempty"` // 分页
	Stations []*api.Station   `protobuf:"bytes,2,rep,name=stations,proto3" json:"stations,omitempty"` // 站点
}

func (x *MerchantStationsResp) Reset() {
	*x = MerchantStationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantStationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantStationsResp) ProtoMessage() {}

func (x *MerchantStationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantStationsResp.ProtoReflect.Descriptor instead.
func (*MerchantStationsResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{11}
}

func (x *MerchantStationsResp) GetPageresp() *common.PageResp {
	if x != nil {
		return x.Pageresp
	}
	return nil
}

func (x *MerchantStationsResp) GetStations() []*api.Station {
	if x != nil {
		return x.Stations
	}
	return nil
}

type EvsesByStationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagereq   *common.PageReq `protobuf:"bytes,1,opt,name=pagereq,proto3" json:"pagereq,omitempty"`
	StationId uint64          `protobuf:"varint,2,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
}

func (x *EvsesByStationReq) Reset() {
	*x = EvsesByStationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvsesByStationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvsesByStationReq) ProtoMessage() {}

func (x *EvsesByStationReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvsesByStationReq.ProtoReflect.Descriptor instead.
func (*EvsesByStationReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{12}
}

func (x *EvsesByStationReq) GetPagereq() *common.PageReq {
	if x != nil {
		return x.Pagereq
	}
	return nil
}

func (x *EvsesByStationReq) GetStationId() uint64 {
	if x != nil {
		return x.StationId
	}
	return 0
}

type EvsesByStationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pageresp *common.PageResp `protobuf:"bytes,1,opt,name=pageresp,proto3" json:"pageresp,omitempty"`
	Evses    []*coregw.Evse   `protobuf:"bytes,2,rep,name=Evses,proto3" json:"Evses,omitempty"`
}

func (x *EvsesByStationResp) Reset() {
	*x = EvsesByStationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvsesByStationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvsesByStationResp) ProtoMessage() {}

func (x *EvsesByStationResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvsesByStationResp.ProtoReflect.Descriptor instead.
func (*EvsesByStationResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{13}
}

func (x *EvsesByStationResp) GetPageresp() *common.PageResp {
	if x != nil {
		return x.Pageresp
	}
	return nil
}

func (x *EvsesByStationResp) GetEvses() []*coregw.Evse {
	if x != nil {
		return x.Evses
	}
	return nil
}

type SetStationOperationStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationId     uint64 `protobuf:"varint,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	IsInOperation bool   `protobuf:"varint,2,opt,name=is_in_operation,json=isInOperation,proto3" json:"is_in_operation,omitempty"`
}

func (x *SetStationOperationStatusReq) Reset() {
	*x = SetStationOperationStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStationOperationStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStationOperationStatusReq) ProtoMessage() {}

func (x *SetStationOperationStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStationOperationStatusReq.ProtoReflect.Descriptor instead.
func (*SetStationOperationStatusReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{14}
}

func (x *SetStationOperationStatusReq) GetStationId() uint64 {
	if x != nil {
		return x.StationId
	}
	return 0
}

func (x *SetStationOperationStatusReq) GetIsInOperation() bool {
	if x != nil {
		return x.IsInOperation
	}
	return false
}

type SetStationOperationStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetStationOperationStatusResp) Reset() {
	*x = SetStationOperationStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStationOperationStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStationOperationStatusResp) ProtoMessage() {}

func (x *SetStationOperationStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStationOperationStatusResp.ProtoReflect.Descriptor instead.
func (*SetStationOperationStatusResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{15}
}

type StationBindEvseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationId  uint64 `protobuf:"varint,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`   // 站点id
	QrcodePath string `protobuf:"bytes,2,opt,name=qrcode_path,json=qrcodePath,proto3" json:"qrcode_path,omitempty"` // 二维码全路径
}

func (x *StationBindEvseReq) Reset() {
	*x = StationBindEvseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationBindEvseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationBindEvseReq) ProtoMessage() {}

func (x *StationBindEvseReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationBindEvseReq.ProtoReflect.Descriptor instead.
func (*StationBindEvseReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{16}
}

func (x *StationBindEvseReq) GetStationId() uint64 {
	if x != nil {
		return x.StationId
	}
	return 0
}

func (x *StationBindEvseReq) GetQrcodePath() string {
	if x != nil {
		return x.QrcodePath
	}
	return ""
}

type StationBindEvseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StationBindEvseResp) Reset() {
	*x = StationBindEvseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationBindEvseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationBindEvseResp) ProtoMessage() {}

func (x *StationBindEvseResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationBindEvseResp.ProtoReflect.Descriptor instead.
func (*StationBindEvseResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{17}
}

type StationUnbindEvseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationId uint64 `protobuf:"varint,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"` // 站点id
	EvseId    uint64 `protobuf:"varint,2,opt,name=evse_id,json=evseId,proto3" json:"evse_id,omitempty"`          // 设备id
}

func (x *StationUnbindEvseReq) Reset() {
	*x = StationUnbindEvseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationUnbindEvseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationUnbindEvseReq) ProtoMessage() {}

func (x *StationUnbindEvseReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationUnbindEvseReq.ProtoReflect.Descriptor instead.
func (*StationUnbindEvseReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{18}
}

func (x *StationUnbindEvseReq) GetStationId() uint64 {
	if x != nil {
		return x.StationId
	}
	return 0
}

func (x *StationUnbindEvseReq) GetEvseId() uint64 {
	if x != nil {
		return x.EvseId
	}
	return 0
}

type StationUnbindEvseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StationUnbindEvseResp) Reset() {
	*x = StationUnbindEvseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationUnbindEvseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationUnbindEvseResp) ProtoMessage() {}

func (x *StationUnbindEvseResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationUnbindEvseResp.ProtoReflect.Descriptor instead.
func (*StationUnbindEvseResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{19}
}

type WithdrawApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *WithdrawApplyReq) Reset() {
	*x = WithdrawApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawApplyReq) ProtoMessage() {}

func (x *WithdrawApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawApplyReq.ProtoReflect.Descriptor instead.
func (*WithdrawApplyReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{20}
}

func (x *WithdrawApplyReq) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type WithdrawApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WithdrawApplyResp) Reset() {
	*x = WithdrawApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawApplyResp) ProtoMessage() {}

func (x *WithdrawApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawApplyResp.ProtoReflect.Descriptor instead.
func (*WithdrawApplyResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{21}
}

type Withdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                   // ID
	ManagerId       uint64         `protobuf:"varint,2,opt,name=manager_id,json=managerId,proto3" json:"manager_id,omitempty"`                    // 收款账号ID
	BankAccount     string         `protobuf:"bytes,3,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`               // 银行卡号
	BankAccountName string         `protobuf:"bytes,4,opt,name=bank_account_name,json=bankAccountName,proto3" json:"bank_account_name,omitempty"` // 银行卡用户名
	BankCode        string         `protobuf:"bytes,5,opt,name=bank_code,json=bankCode,proto3" json:"bank_code,omitempty"`                        // 银行编号
	BankName        string         `protobuf:"bytes,6,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`                        // 银行卡名称
	Amount          float64        `protobuf:"fixed64,7,opt,name=amount,proto3" json:"amount,omitempty"`                                          // 提现总金额(未扣除手续费)
	Fee             float64        `protobuf:"fixed64,8,opt,name=fee,proto3" json:"fee,omitempty"`                                                // 手续费
	Status          WithdrawStatus `protobuf:"varint,9,opt,name=status,proto3,enum=open.WithdrawStatus" json:"status,omitempty"`                  // 状态
	Reason          string         `protobuf:"bytes,10,opt,name=reason,proto3" json:"reason,omitempty"`                                           // 原因
	OpManagerId     uint64         `protobuf:"varint,11,opt,name=op_manager_id,json=opManagerId,proto3" json:"op_manager_id,omitempty"`           // 操作人
	CreatedAt       uint64         `protobuf:"varint,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                   // 提现时间
}

func (x *Withdraw) Reset() {
	*x = Withdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Withdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Withdraw) ProtoMessage() {}

func (x *Withdraw) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Withdraw.ProtoReflect.Descriptor instead.
func (*Withdraw) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{22}
}

func (x *Withdraw) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Withdraw) GetManagerId() uint64 {
	if x != nil {
		return x.ManagerId
	}
	return 0
}

func (x *Withdraw) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *Withdraw) GetBankAccountName() string {
	if x != nil {
		return x.BankAccountName
	}
	return ""
}

func (x *Withdraw) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *Withdraw) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *Withdraw) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Withdraw) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *Withdraw) GetStatus() WithdrawStatus {
	if x != nil {
		return x.Status
	}
	return WithdrawStatus_WithdrawStatus_InProcess
}

func (x *Withdraw) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Withdraw) GetOpManagerId() uint64 {
	if x != nil {
		return x.OpManagerId
	}
	return 0
}

func (x *Withdraw) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type WithdrawRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagereq *common.PageReq `protobuf:"bytes,1,opt,name=pagereq,proto3" json:"pagereq,omitempty"` //
}

func (x *WithdrawRecordReq) Reset() {
	*x = WithdrawRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRecordReq) ProtoMessage() {}

func (x *WithdrawRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRecordReq.ProtoReflect.Descriptor instead.
func (*WithdrawRecordReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{23}
}

func (x *WithdrawRecordReq) GetPagereq() *common.PageReq {
	if x != nil {
		return x.Pagereq
	}
	return nil
}

type WithdrawRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pageresp  *common.PageResp `protobuf:"bytes,1,opt,name=pageresp,proto3" json:"pageresp,omitempty"`   // 分页
	Withdraws []*Withdraw      `protobuf:"bytes,2,rep,name=withdraws,proto3" json:"withdraws,omitempty"` // 提现列表
}

func (x *WithdrawRecordResp) Reset() {
	*x = WithdrawRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRecordResp) ProtoMessage() {}

func (x *WithdrawRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRecordResp.ProtoReflect.Descriptor instead.
func (*WithdrawRecordResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{24}
}

func (x *WithdrawRecordResp) GetPageresp() *common.PageResp {
	if x != nil {
		return x.Pageresp
	}
	return nil
}

func (x *WithdrawRecordResp) GetWithdraws() []*Withdraw {
	if x != nil {
		return x.Withdraws
	}
	return nil
}

type MerchantOrdersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagereq *common.PageReq `protobuf:"bytes,1,opt,name=pagereq,proto3" json:"pagereq,omitempty"` //
}

func (x *MerchantOrdersReq) Reset() {
	*x = MerchantOrdersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantOrdersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantOrdersReq) ProtoMessage() {}

func (x *MerchantOrdersReq) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantOrdersReq.ProtoReflect.Descriptor instead.
func (*MerchantOrdersReq) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{25}
}

func (x *MerchantOrdersReq) GetPagereq() *common.PageReq {
	if x != nil {
		return x.Pagereq
	}
	return nil
}

type MerchantOrdersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pageresp   *common.PageResp     `protobuf:"bytes,1,opt,name=pageresp,proto3" json:"pageresp,omitempty"` //
	OrderInfos []*api.OrderInfoResp `protobuf:"bytes,2,rep,name=order_infos,json=orderInfos,proto3" json:"order_infos,omitempty"`
}

func (x *MerchantOrdersResp) Reset() {
	*x = MerchantOrdersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_open_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantOrdersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantOrdersResp) ProtoMessage() {}

func (x *MerchantOrdersResp) ProtoReflect() protoreflect.Message {
	mi := &file_open_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantOrdersResp.ProtoReflect.Descriptor instead.
func (*MerchantOrdersResp) Descriptor() ([]byte, []int) {
	return file_open_proto_rawDescGZIP(), []int{26}
}

func (x *MerchantOrdersResp) GetPageresp() *common.PageResp {
	if x != nil {
		return x.Pageresp
	}
	return nil
}

func (x *MerchantOrdersResp) GetOrderInfos() []*api.OrderInfoResp {
	if x != nil {
		return x.OrderInfos
	}
	return nil
}

var File_open_proto protoreflect.FileDescriptor

var file_open_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0c, 0x63, 0x6f, 0x72, 0x65, 0x67, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0xbf, 0x02, 0x0a,
	0x10, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7d,
	0x0a, 0x0f, 0x42, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x12, 0x0a,
	0x10, 0x42, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x36, 0x0a, 0x11, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x6e, 0x62,
	0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22,
	0xc0, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x73, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x36, 0x0a, 0x0c,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x67, 0x77, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22,
	0xf8, 0x01, 0x0a, 0x15, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x73, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76, 0x73, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x36, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x67, 0x77,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x13, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x71, 0x22, 0x6e, 0x0a, 0x14,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65,
	0x73, 0x70, 0x12, 0x28, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5d, 0x0a, 0x11,
	0x45, 0x76, 0x73, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x12, 0x45,
	0x76, 0x73, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x73, 0x70, 0x12,
	0x22, 0x0a, 0x05, 0x45, 0x76, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x67, 0x77, 0x2e, 0x45, 0x76, 0x73, 0x65, 0x52, 0x05, 0x45, 0x76,
	0x73, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x49,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1f, 0x0a, 0x1d, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x54, 0x0a, 0x12, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x45, 0x76, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64,
	0x45, 0x76, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4e, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x45, 0x76, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x65, 0x76, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x65, 0x76, 0x73, 0x65, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x45, 0x76, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x2a, 0x0a, 0x10, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x13, 0x0a,
	0x11, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0xf5, 0x02, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65,
	0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x70, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x6f, 0x70, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3e, 0x0a, 0x11, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x29, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x71, 0x22, 0x70, 0x0a, 0x12, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2c, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x73, 0x70, 0x12, 0x2c,
	0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x52, 0x09, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x22, 0x3e, 0x0a, 0x11,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x71, 0x22, 0x77, 0x0a, 0x12,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x72, 0x65, 0x73, 0x70,
	0x12, 0x33, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2a, 0xb5, 0x01, 0x0a, 0x13, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x1a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x1e, 0x0a,
	0x1a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x0a, 0x12, 0x1e, 0x0a,
	0x1a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x10, 0x14, 0x12, 0x20, 0x0a,
	0x1c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x10, 0x1e, 0x12,
	0x1c, 0x0a, 0x18, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x10, 0x28, 0x2a, 0x90, 0x02,
	0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x10, 0x00,
	0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x10,
	0x01, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74,
	0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x10,
	0x06, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x10, 0x07,
	0x2a, 0x6c, 0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00,
	0x12, 0x20, 0x0a, 0x13, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x10, 0xf6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x0a, 0x32, 0x94,
	0x07, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x09,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x41, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0e, 0x45, 0x76, 0x73, 0x65, 0x73, 0x42, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x45,
	0x76, 0x73, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x45, 0x76, 0x73, 0x65, 0x73, 0x42, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x19, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x53,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x46, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x45,
	0x76, 0x73, 0x65, 0x12, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x45, 0x76, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64,
	0x45, 0x76, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x45, 0x76, 0x73, 0x65, 0x12, 0x1a, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x62, 0x69,
	0x6e, 0x64, 0x45, 0x76, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x45, 0x76,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a,
	0x0c, 0x42, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x12, 0x15, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x42, 0x69, 0x6e, 0x64,
	0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0e,
	0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x12, 0x17,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x55,
	0x6e, 0x62, 0x69, 0x6e, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x40, 0x0a, 0x0d, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x2c, 0x48, 0x03, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x6f, 0x74, 0x6f, 0x64, 0x69, 0x61, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6f,
	0x70, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_open_proto_rawDescOnce sync.Once
	file_open_proto_rawDescData = file_open_proto_rawDesc
)

func file_open_proto_rawDescGZIP() []byte {
	file_open_proto_rawDescOnce.Do(func() {
		file_open_proto_rawDescData = protoimpl.X.CompressGZIP(file_open_proto_rawDescData)
	})
	return file_open_proto_rawDescData
}

var file_open_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_open_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_open_proto_goTypes = []interface{}{
	(MerchantApplyStatus)(0),              // 0: open.MerchantApplyStatus
	(ApplyResourceType)(0),                // 1: open.ApplyResourceType
	(WithdrawStatus)(0),                   // 2: open.WithdrawStatus
	(*MerchantInfoReq)(nil),               // 3: open.MerchantInfoReq
	(*MerchantInfoResp)(nil),              // 4: open.MerchantInfoResp
	(*BindBankCardReq)(nil),               // 5: open.BindBankCardReq
	(*BindBankCardResp)(nil),              // 6: open.BindBankCardResp
	(*UnbindBankCardReq)(nil),             // 7: open.UnbindBankCardReq
	(*UnbindBankCardResp)(nil),            // 8: open.UnbindBankCardResp
	(*MerchantApplyReq)(nil),              // 9: open.MerchantApplyReq
	(*MerchantApplyResp)(nil),             // 10: open.MerchantApplyResp
	(*MerchantApplyInfoReq)(nil),          // 11: open.MerchantApplyInfoReq
	(*MerchantApplyInfoResp)(nil),         // 12: open.MerchantApplyInfoResp
	(*MerchantStationsReq)(nil),           // 13: open.MerchantStationsReq
	(*MerchantStationsResp)(nil),          // 14: open.MerchantStationsResp
	(*EvsesByStationReq)(nil),             // 15: open.EvsesByStationReq
	(*EvsesByStationResp)(nil),            // 16: open.EvsesByStationResp
	(*SetStationOperationStatusReq)(nil),  // 17: open.SetStationOperationStatusReq
	(*SetStationOperationStatusResp)(nil), // 18: open.SetStationOperationStatusResp
	(*StationBindEvseReq)(nil),            // 19: open.StationBindEvseReq
	(*StationBindEvseResp)(nil),           // 20: open.StationBindEvseResp
	(*StationUnbindEvseReq)(nil),          // 21: open.StationUnbindEvseReq
	(*StationUnbindEvseResp)(nil),         // 22: open.StationUnbindEvseResp
	(*WithdrawApplyReq)(nil),              // 23: open.WithdrawApplyReq
	(*WithdrawApplyResp)(nil),             // 24: open.WithdrawApplyResp
	(*Withdraw)(nil),                      // 25: open.Withdraw
	(*WithdrawRecordReq)(nil),             // 26: open.WithdrawRecordReq
	(*WithdrawRecordResp)(nil),            // 27: open.WithdrawRecordResp
	(*MerchantOrdersReq)(nil),             // 28: open.MerchantOrdersReq
	(*MerchantOrdersResp)(nil),            // 29: open.MerchantOrdersResp
	(coregw.VehicleType)(0),               // 30: coregw.VehicleType
	(*common.PageReq)(nil),                // 31: common.PageReq
	(*common.PageResp)(nil),               // 32: common.PageResp
	(*api.Station)(nil),                   // 33: api.Station
	(*coregw.Evse)(nil),                   // 34: coregw.Evse
	(*api.OrderInfoResp)(nil),             // 35: api.OrderInfoResp
}
var file_open_proto_depIdxs = []int32{
	30, // 0: open.MerchantApplyReq.vehicle_type:type_name -> coregw.VehicleType
	1,  // 1: open.MerchantApplyReq.resource_type:type_name -> open.ApplyResourceType
	30, // 2: open.MerchantApplyInfoResp.vehicle_type:type_name -> coregw.VehicleType
	1,  // 3: open.MerchantApplyInfoResp.resource_type:type_name -> open.ApplyResourceType
	0,  // 4: open.MerchantApplyInfoResp.status:type_name -> open.MerchantApplyStatus
	31, // 5: open.MerchantStationsReq.pagereq:type_name -> common.PageReq
	32, // 6: open.MerchantStationsResp.pageresp:type_name -> common.PageResp
	33, // 7: open.MerchantStationsResp.stations:type_name -> api.Station
	31, // 8: open.EvsesByStationReq.pagereq:type_name -> common.PageReq
	32, // 9: open.EvsesByStationResp.pageresp:type_name -> common.PageResp
	34, // 10: open.EvsesByStationResp.Evses:type_name -> coregw.Evse
	2,  // 11: open.Withdraw.status:type_name -> open.WithdrawStatus
	31, // 12: open.WithdrawRecordReq.pagereq:type_name -> common.PageReq
	32, // 13: open.WithdrawRecordResp.pageresp:type_name -> common.PageResp
	25, // 14: open.WithdrawRecordResp.withdraws:type_name -> open.Withdraw
	31, // 15: open.MerchantOrdersReq.pagereq:type_name -> common.PageReq
	32, // 16: open.MerchantOrdersResp.pageresp:type_name -> common.PageResp
	35, // 17: open.MerchantOrdersResp.order_infos:type_name -> api.OrderInfoResp
	9,  // 18: open.MerchantService.Apply:input_type -> open.MerchantApplyReq
	11, // 19: open.MerchantService.ApplyInfo:input_type -> open.MerchantApplyInfoReq
	13, // 20: open.MerchantService.Stations:input_type -> open.MerchantStationsReq
	15, // 21: open.MerchantService.EvsesByStation:input_type -> open.EvsesByStationReq
	17, // 22: open.MerchantService.SetStationOperationStatus:input_type -> open.SetStationOperationStatusReq
	19, // 23: open.MerchantService.StationBindEvse:input_type -> open.StationBindEvseReq
	21, // 24: open.MerchantService.StationUnbindEvse:input_type -> open.StationUnbindEvseReq
	3,  // 25: open.MerchantService.Info:input_type -> open.MerchantInfoReq
	5,  // 26: open.MerchantService.BindBankCard:input_type -> open.BindBankCardReq
	7,  // 27: open.MerchantService.UnbindBankCard:input_type -> open.UnbindBankCardReq
	23, // 28: open.MerchantService.WithdrawApply:input_type -> open.WithdrawApplyReq
	26, // 29: open.MerchantService.WithdrawRecord:input_type -> open.WithdrawRecordReq
	28, // 30: open.MerchantService.Orders:input_type -> open.MerchantOrdersReq
	10, // 31: open.MerchantService.Apply:output_type -> open.MerchantApplyResp
	12, // 32: open.MerchantService.ApplyInfo:output_type -> open.MerchantApplyInfoResp
	14, // 33: open.MerchantService.Stations:output_type -> open.MerchantStationsResp
	16, // 34: open.MerchantService.EvsesByStation:output_type -> open.EvsesByStationResp
	18, // 35: open.MerchantService.SetStationOperationStatus:output_type -> open.SetStationOperationStatusResp
	20, // 36: open.MerchantService.StationBindEvse:output_type -> open.StationBindEvseResp
	22, // 37: open.MerchantService.StationUnbindEvse:output_type -> open.StationUnbindEvseResp
	4,  // 38: open.MerchantService.Info:output_type -> open.MerchantInfoResp
	6,  // 39: open.MerchantService.BindBankCard:output_type -> open.BindBankCardResp
	8,  // 40: open.MerchantService.UnbindBankCard:output_type -> open.UnbindBankCardResp
	24, // 41: open.MerchantService.WithdrawApply:output_type -> open.WithdrawApplyResp
	27, // 42: open.MerchantService.WithdrawRecord:output_type -> open.WithdrawRecordResp
	29, // 43: open.MerchantService.Orders:output_type -> open.MerchantOrdersResp
	31, // [31:44] is the sub-list for method output_type
	18, // [18:31] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_open_proto_init() }
func file_open_proto_init() {
	if File_open_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_open_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindBankCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindBankCardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindBankCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindBankCardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApplyInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantStationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantStationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvsesByStationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvsesByStationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStationOperationStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStationOperationStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationBindEvseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationBindEvseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationUnbindEvseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationUnbindEvseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Withdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantOrdersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_open_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantOrdersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_open_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_open_proto_goTypes,
		DependencyIndexes: file_open_proto_depIdxs,
		EnumInfos:         file_open_proto_enumTypes,
		MessageInfos:      file_open_proto_msgTypes,
	}.Build()
	File_open_proto = out.File
	file_open_proto_rawDesc = nil
	file_open_proto_goTypes = nil
	file_open_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MerchantServiceClient is the client API for MerchantService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MerchantServiceClient interface {
	// 桩主申请
	Apply(ctx context.Context, in *MerchantApplyReq, opts ...grpc.CallOption) (*MerchantApplyResp, error)
	// 桩主申请信息
	ApplyInfo(ctx context.Context, in *MerchantApplyInfoReq, opts ...grpc.CallOption) (*MerchantApplyInfoResp, error)
	// 桩主站点列表
	Stations(ctx context.Context, in *MerchantStationsReq, opts ...grpc.CallOption) (*MerchantStationsResp, error)
	// 根据站点获取设备详情
	EvsesByStation(ctx context.Context, in *EvsesByStationReq, opts ...grpc.CallOption) (*EvsesByStationResp, error)
	// 设置站点运营商状态
	SetStationOperationStatus(ctx context.Context, in *SetStationOperationStatusReq, opts ...grpc.CallOption) (*SetStationOperationStatusResp, error)
	// 站点绑定设备
	StationBindEvse(ctx context.Context, in *StationBindEvseReq, opts ...grpc.CallOption) (*StationBindEvseResp, error)
	// 站点解绑设备
	StationUnbindEvse(ctx context.Context, in *StationUnbindEvseReq, opts ...grpc.CallOption) (*StationUnbindEvseResp, error)
	// 桩主基本信息
	Info(ctx context.Context, in *MerchantInfoReq, opts ...grpc.CallOption) (*MerchantInfoResp, error)
	// 绑定银行卡
	BindBankCard(ctx context.Context, in *BindBankCardReq, opts ...grpc.CallOption) (*BindBankCardResp, error)
	// 解绑银行卡
	UnbindBankCard(ctx context.Context, in *UnbindBankCardReq, opts ...grpc.CallOption) (*UnbindBankCardResp, error)
	// 提现申请
	WithdrawApply(ctx context.Context, in *WithdrawApplyReq, opts ...grpc.CallOption) (*WithdrawApplyResp, error)
	// 提现记录
	WithdrawRecord(ctx context.Context, in *WithdrawRecordReq, opts ...grpc.CallOption) (*WithdrawRecordResp, error)
	// 订单
	Orders(ctx context.Context, in *MerchantOrdersReq, opts ...grpc.CallOption) (*MerchantOrdersResp, error)
}

type merchantServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMerchantServiceClient(cc grpc.ClientConnInterface) MerchantServiceClient {
	return &merchantServiceClient{cc}
}

func (c *merchantServiceClient) Apply(ctx context.Context, in *MerchantApplyReq, opts ...grpc.CallOption) (*MerchantApplyResp, error) {
	out := new(MerchantApplyResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) ApplyInfo(ctx context.Context, in *MerchantApplyInfoReq, opts ...grpc.CallOption) (*MerchantApplyInfoResp, error) {
	out := new(MerchantApplyInfoResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/ApplyInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) Stations(ctx context.Context, in *MerchantStationsReq, opts ...grpc.CallOption) (*MerchantStationsResp, error) {
	out := new(MerchantStationsResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/Stations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) EvsesByStation(ctx context.Context, in *EvsesByStationReq, opts ...grpc.CallOption) (*EvsesByStationResp, error) {
	out := new(EvsesByStationResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/EvsesByStation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) SetStationOperationStatus(ctx context.Context, in *SetStationOperationStatusReq, opts ...grpc.CallOption) (*SetStationOperationStatusResp, error) {
	out := new(SetStationOperationStatusResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/SetStationOperationStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) StationBindEvse(ctx context.Context, in *StationBindEvseReq, opts ...grpc.CallOption) (*StationBindEvseResp, error) {
	out := new(StationBindEvseResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/StationBindEvse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) StationUnbindEvse(ctx context.Context, in *StationUnbindEvseReq, opts ...grpc.CallOption) (*StationUnbindEvseResp, error) {
	out := new(StationUnbindEvseResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/StationUnbindEvse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) Info(ctx context.Context, in *MerchantInfoReq, opts ...grpc.CallOption) (*MerchantInfoResp, error) {
	out := new(MerchantInfoResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) BindBankCard(ctx context.Context, in *BindBankCardReq, opts ...grpc.CallOption) (*BindBankCardResp, error) {
	out := new(BindBankCardResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/BindBankCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) UnbindBankCard(ctx context.Context, in *UnbindBankCardReq, opts ...grpc.CallOption) (*UnbindBankCardResp, error) {
	out := new(UnbindBankCardResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/UnbindBankCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) WithdrawApply(ctx context.Context, in *WithdrawApplyReq, opts ...grpc.CallOption) (*WithdrawApplyResp, error) {
	out := new(WithdrawApplyResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/WithdrawApply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) WithdrawRecord(ctx context.Context, in *WithdrawRecordReq, opts ...grpc.CallOption) (*WithdrawRecordResp, error) {
	out := new(WithdrawRecordResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/WithdrawRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantServiceClient) Orders(ctx context.Context, in *MerchantOrdersReq, opts ...grpc.CallOption) (*MerchantOrdersResp, error) {
	out := new(MerchantOrdersResp)
	err := c.cc.Invoke(ctx, "/open.MerchantService/Orders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MerchantServiceServer is the server API for MerchantService service.
type MerchantServiceServer interface {
	// 桩主申请
	Apply(context.Context, *MerchantApplyReq) (*MerchantApplyResp, error)
	// 桩主申请信息
	ApplyInfo(context.Context, *MerchantApplyInfoReq) (*MerchantApplyInfoResp, error)
	// 桩主站点列表
	Stations(context.Context, *MerchantStationsReq) (*MerchantStationsResp, error)
	// 根据站点获取设备详情
	EvsesByStation(context.Context, *EvsesByStationReq) (*EvsesByStationResp, error)
	// 设置站点运营商状态
	SetStationOperationStatus(context.Context, *SetStationOperationStatusReq) (*SetStationOperationStatusResp, error)
	// 站点绑定设备
	StationBindEvse(context.Context, *StationBindEvseReq) (*StationBindEvseResp, error)
	// 站点解绑设备
	StationUnbindEvse(context.Context, *StationUnbindEvseReq) (*StationUnbindEvseResp, error)
	// 桩主基本信息
	Info(context.Context, *MerchantInfoReq) (*MerchantInfoResp, error)
	// 绑定银行卡
	BindBankCard(context.Context, *BindBankCardReq) (*BindBankCardResp, error)
	// 解绑银行卡
	UnbindBankCard(context.Context, *UnbindBankCardReq) (*UnbindBankCardResp, error)
	// 提现申请
	WithdrawApply(context.Context, *WithdrawApplyReq) (*WithdrawApplyResp, error)
	// 提现记录
	WithdrawRecord(context.Context, *WithdrawRecordReq) (*WithdrawRecordResp, error)
	// 订单
	Orders(context.Context, *MerchantOrdersReq) (*MerchantOrdersResp, error)
}

// UnimplementedMerchantServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMerchantServiceServer struct {
}

func (*UnimplementedMerchantServiceServer) Apply(context.Context, *MerchantApplyReq) (*MerchantApplyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Apply not implemented")
}
func (*UnimplementedMerchantServiceServer) ApplyInfo(context.Context, *MerchantApplyInfoReq) (*MerchantApplyInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyInfo not implemented")
}
func (*UnimplementedMerchantServiceServer) Stations(context.Context, *MerchantStationsReq) (*MerchantStationsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stations not implemented")
}
func (*UnimplementedMerchantServiceServer) EvsesByStation(context.Context, *EvsesByStationReq) (*EvsesByStationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EvsesByStation not implemented")
}
func (*UnimplementedMerchantServiceServer) SetStationOperationStatus(context.Context, *SetStationOperationStatusReq) (*SetStationOperationStatusResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetStationOperationStatus not implemented")
}
func (*UnimplementedMerchantServiceServer) StationBindEvse(context.Context, *StationBindEvseReq) (*StationBindEvseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StationBindEvse not implemented")
}
func (*UnimplementedMerchantServiceServer) StationUnbindEvse(context.Context, *StationUnbindEvseReq) (*StationUnbindEvseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StationUnbindEvse not implemented")
}
func (*UnimplementedMerchantServiceServer) Info(context.Context, *MerchantInfoReq) (*MerchantInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}
func (*UnimplementedMerchantServiceServer) BindBankCard(context.Context, *BindBankCardReq) (*BindBankCardResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindBankCard not implemented")
}
func (*UnimplementedMerchantServiceServer) UnbindBankCard(context.Context, *UnbindBankCardReq) (*UnbindBankCardResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnbindBankCard not implemented")
}
func (*UnimplementedMerchantServiceServer) WithdrawApply(context.Context, *WithdrawApplyReq) (*WithdrawApplyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawApply not implemented")
}
func (*UnimplementedMerchantServiceServer) WithdrawRecord(context.Context, *WithdrawRecordReq) (*WithdrawRecordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawRecord not implemented")
}
func (*UnimplementedMerchantServiceServer) Orders(context.Context, *MerchantOrdersReq) (*MerchantOrdersResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Orders not implemented")
}

func RegisterMerchantServiceServer(s *grpc.Server, srv MerchantServiceServer) {
	s.RegisterService(&_MerchantService_serviceDesc, srv)
}

func _MerchantService_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantApplyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).Apply(ctx, req.(*MerchantApplyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_ApplyInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantApplyInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).ApplyInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/ApplyInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).ApplyInfo(ctx, req.(*MerchantApplyInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_Stations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantStationsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).Stations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/Stations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).Stations(ctx, req.(*MerchantStationsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_EvsesByStation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EvsesByStationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).EvsesByStation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/EvsesByStation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).EvsesByStation(ctx, req.(*EvsesByStationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_SetStationOperationStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetStationOperationStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).SetStationOperationStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/SetStationOperationStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).SetStationOperationStatus(ctx, req.(*SetStationOperationStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_StationBindEvse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StationBindEvseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).StationBindEvse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/StationBindEvse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).StationBindEvse(ctx, req.(*StationBindEvseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_StationUnbindEvse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StationUnbindEvseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).StationUnbindEvse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/StationUnbindEvse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).StationUnbindEvse(ctx, req.(*StationUnbindEvseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).Info(ctx, req.(*MerchantInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_BindBankCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindBankCardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).BindBankCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/BindBankCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).BindBankCard(ctx, req.(*BindBankCardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_UnbindBankCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnbindBankCardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).UnbindBankCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/UnbindBankCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).UnbindBankCard(ctx, req.(*UnbindBankCardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_WithdrawApply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawApplyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).WithdrawApply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/WithdrawApply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).WithdrawApply(ctx, req.(*WithdrawApplyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_WithdrawRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawRecordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).WithdrawRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/WithdrawRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).WithdrawRecord(ctx, req.(*WithdrawRecordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantService_Orders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantOrdersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantServiceServer).Orders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/open.MerchantService/Orders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantServiceServer).Orders(ctx, req.(*MerchantOrdersReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _MerchantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "open.MerchantService",
	HandlerType: (*MerchantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Apply",
			Handler:    _MerchantService_Apply_Handler,
		},
		{
			MethodName: "ApplyInfo",
			Handler:    _MerchantService_ApplyInfo_Handler,
		},
		{
			MethodName: "Stations",
			Handler:    _MerchantService_Stations_Handler,
		},
		{
			MethodName: "EvsesByStation",
			Handler:    _MerchantService_EvsesByStation_Handler,
		},
		{
			MethodName: "SetStationOperationStatus",
			Handler:    _MerchantService_SetStationOperationStatus_Handler,
		},
		{
			MethodName: "StationBindEvse",
			Handler:    _MerchantService_StationBindEvse_Handler,
		},
		{
			MethodName: "StationUnbindEvse",
			Handler:    _MerchantService_StationUnbindEvse_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _MerchantService_Info_Handler,
		},
		{
			MethodName: "BindBankCard",
			Handler:    _MerchantService_BindBankCard_Handler,
		},
		{
			MethodName: "UnbindBankCard",
			Handler:    _MerchantService_UnbindBankCard_Handler,
		},
		{
			MethodName: "WithdrawApply",
			Handler:    _MerchantService_WithdrawApply_Handler,
		},
		{
			MethodName: "WithdrawRecord",
			Handler:    _MerchantService_WithdrawRecord_Handler,
		},
		{
			MethodName: "Orders",
			Handler:    _MerchantService_Orders_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "open.proto",
}
